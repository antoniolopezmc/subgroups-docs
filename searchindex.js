Search.setIndex({"docnames": ["index", "project_files/subgroups", "project_files/subgroups.algorithms", "project_files/subgroups.algorithms.subgroup_lists", "project_files/subgroups.algorithms.subgroup_sets", "project_files/subgroups.core", "project_files/subgroups.data_structures", "project_files/subgroups.datasets", "project_files/subgroups.quality_measures", "project_files/subgroups.tests", "project_files/subgroups.tests.algorithms", "project_files/subgroups.tests.algorithms.subgroup_lists", "project_files/subgroups.tests.algorithms.subgroup_sets", "project_files/subgroups.tests.core", "project_files/subgroups.tests.data_structures", "project_files/subgroups.tests.quality_measures", "project_files/subgroups.tests.utils", "project_files/subgroups.utils"], "filenames": ["index.rst", "project_files/subgroups.rst", "project_files/subgroups.algorithms.rst", "project_files/subgroups.algorithms.subgroup_lists.rst", "project_files/subgroups.algorithms.subgroup_sets.rst", "project_files/subgroups.core.rst", "project_files/subgroups.data_structures.rst", "project_files/subgroups.datasets.rst", "project_files/subgroups.quality_measures.rst", "project_files/subgroups.tests.rst", "project_files/subgroups.tests.algorithms.rst", "project_files/subgroups.tests.algorithms.subgroup_lists.rst", "project_files/subgroups.tests.algorithms.subgroup_sets.rst", "project_files/subgroups.tests.core.rst", "project_files/subgroups.tests.data_structures.rst", "project_files/subgroups.tests.quality_measures.rst", "project_files/subgroups.tests.utils.rst", "project_files/subgroups.utils.rst"], "titles": ["subgroups documentation", "subgroups package", "subgroups.algorithms package", "subgroups.algorithms.subgroup_lists package", "subgroups.algorithms.subgroup_sets package", "subgroups.core package", "subgroups.data_structures package", "subgroups.datasets package", "subgroups.quality_measures package", "subgroups.tests package", "subgroups.tests.algorithms package", "subgroups.tests.algorithms.subgroup_lists package", "subgroups.tests.algorithms.subgroup_sets package", "subgroups.tests.core package", "subgroups.tests.data_structures package", "subgroups.tests.quality_measures package", "subgroups.tests.utils package", "subgroups.utils package"], "terms": {"i": [0, 1, 2, 3, 4, 5, 6, 8, 17], "python": [0, 6, 8], "librari": [0, 1], "which": [0, 1, 2, 3, 4, 5, 6, 8, 9, 17], "contain": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17], "collect": [0, 6], "discoveri": [0, 1], "algorithm": [0, 1, 6, 9, 17], "other": [0, 5], "data": [0, 4, 6], "analysi": 0, "util": [0, 1, 9], "packag": 0, "core": [0, 1, 2, 3, 4, 6, 7, 9, 17], "data_structur": [0, 1, 9], "quality_measur": [0, 1, 2, 4, 6, 9], "test": [0, 1, 4, 8], "subgroup_list": [1, 2, 9, 10, 14], "dslm": [1, 2, 11], "gmsl": [1, 2, 11], "psld": [1, 2], "subgroup_set": [1, 2, 9, 10], "bsd": [1, 2, 6, 12], "cbsd": [1, 2, 12], "cpbsd": [1, 2, 12], "qfinder": [1, 2, 6, 12], "sdmap": [1, 2, 6, 12], "sdmapstar": [1, 2, 6, 12], "vlsd": [1, 2, 6, 12], "fit": [1, 2, 3, 4], "oper": [1, 13], "equal": [1, 3, 5, 6, 8], "greater": [1, 5], "greater_or_equ": [1, 5], "less": [1, 3, 5], "less_or_equ": [1, 5], "not_equ": [1, 5], "evalu": [1, 4, 5], "generate_from_str": [1, 5], "pattern": [1, 4, 6, 13, 17], "add_selector": [1, 5], "copi": [1, 5], "get_selector": [1, 5], "is_contain": [1, 5], "is_refin": [1, 5], "remove_selector": [1, 5], "remove_selector_by_index": [1, 5], "selector": [1, 4, 6, 13, 17], "attribute_nam": [1, 5], "match": [1, 5, 6], "valu": [1, 2, 3, 4, 5, 6, 8, 17], "descript": [1, 3, 4, 5, 6], "filter": [1, 5, 17], "target": [1, 2, 3, 4, 5, 6], "bitset_bsd": 1, "bitsetbsd": [1, 6], "bitset_neg": [1, 6], "bitset_po": [1, 6], "build_bitset": [1, 6], "generate_set_of_frequent_selector": [1, 6], "bitsetdictionari": [1, 6], "bitset_qfind": 1, "compute_credibility_measur": [1, 6], "generate_bitset": [1, 6], "get_non_empty_pattern": [1, 6], "fp_tree_for_sdmap": [1, 14], "fptreeforsdmap": [1, 6], "build_tre": [1, 6], "generate_conditional_fp_tre": [1, 6], "header_t": [1, 6], "header_table_as_str": [1, 6], "is_empti": [1, 6], "root_nod": [1, 6], "sorted_header_t": [1, 6], "there_is_a_single_path": [1, 6], "tree_as_str": [1, 6], "fp_tree_for_sdmapstar": 1, "fptreeforsdmapstar": [1, 6], "generate_conditional_fp_tree_star": [1, 6], "fp_tree_nod": [1, 14], "fptreenod": [1, 6], "add_child": [1, 6], "counter": [1, 6], "delete_child_by_selector": [1, 6], "get_child_by_selector": [1, 6], "has_this_child": [1, 6], "is_child_of": [1, 6], "node_link": [1, 6], "number_of_children": [1, 6], "parent": [1, 6], "subgrouplist": [1, 6], "add_subgroup": [1, 6], "dataset_number_of_neg": [1, 6], "dataset_number_of_posit": [1, 6], "dataset_target_distribut": [1, 6], "default_rule_bitarray_of_neg": [1, 6], "default_rule_bitarray_of_posit": [1, 6], "delete_last_subgroup": [1, 6], "get_subgroup": [1, 6], "get_subgroup_bitarray_of_neg": [1, 6], "get_subgroup_bitarray_of_posit": [1, 6], "get_subgroup_original_bitarray_of_neg": [1, 6], "get_subgroup_original_bitarray_of_posit": [1, 6], "number_of_dataset_inst": [1, 6], "vertical_list": [1, 14], "verticallist": [1, 6], "compute_quality_valu": [1, 6], "fp": [1, 4, 6, 8], "join": [1, 6], "list_of_selector": [1, 5, 6, 17], "n": [1, 4, 6], "quality_valu": [1, 6], "sequence_of_instances_fp": [1, 6], "sequence_of_instances_tp": [1, 6], "tp": [1, 4, 6, 8], "vertical_list_with_bitset": 1, "verticallistwithbitset": [1, 6], "vertical_list_with_set": 1, "verticallistwithset": [1, 6], "dataset": [1, 4, 6], "load_ballons_csv": [1, 7], "load_car_evaluation_csv": [1, 7], "load_covid_sp_csv": [1, 7], "load_credit_g_csv": [1, 7], "load_heart_disease_csv": [1, 7], "load_income_csv": [1, 7], "load_lenses_csv": [1, 7], "load_lymph_csv": [1, 7], "load_mushroom_csv": [1, 7], "load_shop_csv": [1, 7], "load_sick_csv": [1, 7], "load_tic_tac_toe_csv": [1, 7], "load_vote_csv": [1, 7], "absolute_wracc": 1, "absolutewracc": [1, 8], "comput": [1, 4, 6, 8, 17], "get_nam": [1, 8], "optimistic_estimate_of": [1, 8], "binomial_test": 1, "binomialtest": [1, 8], "binomial_test_optimistic_estimate_1": 1, "binomialtestoptimisticestimate1": [1, 8], "coverag": [1, 4], "f1_score": 1, "f1score": [1, 8], "irr": 1, "npv": 1, "piatetsky_shapiro": 1, "piatetskyshapiro": [1, 8], "piatetsky_shapiro_optimistic_estimate_1": 1, "piatetskyshapirooptimisticestimate1": [1, 8], "piatetsky_shapiro_optimistic_estimate_2": 1, "piatetskyshapirooptimisticestimate2": [1, 8], "ppv": 1, "qg": 1, "qualitymeasur": [1, 4, 6, 8], "false_popul": [1, 8], "false_posit": [1, 8], "true_popul": [1, 8], "true_posit": [1, 8], "sensit": 1, "specif": [1, 4], "support": [1, 3, 4, 5, 6], "wracc": 1, "wracc_optimistic_estimate_1": 1, "wraccoptimisticestimate1": [1, 8], "youden": 1, "test_oper": [1, 9], "test_pattern": [1, 9], "test_selector": [1, 9], "test_subgroup": [1, 2, 4, 9], "test_fp_tree_for_sdmap": [1, 9], "test_fp_tree_nod": [1, 9], "test_subgroup_list": [1, 9], "test_vertical_list_with_bitset": [1, 9], "test_vertical_list_with_set": [1, 9], "test_quality_measur": [1, 9], "test_dataframe_filt": [1, 9], "test_file_format_transform": [1, 9], "run_all_test": [1, 9], "dataframe_filt": [1, 16], "filter_by_list_of_selector": [1, 17], "file_format_transform": [1, 16], "to_input_format_for_subgroup_list_algorithm": [1, 17], "mdl": 1, "log2_multinomial_with_recurr": [1, 17], "multinomial_with_recurr": [1, 17], "universal_code_for_integ": [1, 17], "universal_code_for_integer_with_maximum": [1, 17], "thi": [1, 2, 3, 4, 5, 6, 8, 17], "file": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 16, 17], "new": [1, 6, 8], "us": [1, 4, 5, 6, 8, 9, 17], "datasetattributetypeerror": 1, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17], "base": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17], "typeerror": [1, 5], "rais": [1, 5, 6, 17], "when": [1, 17], "type": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17], "an": [1, 2, 5, 6, 8, 17], "attribut": [1, 2, 3, 4, 5, 6, 17], "sd": [1, 17], "duplicatefptreenodeerror": [1, 6], "runtimeerror": 1, "attempt": 1, "add": [1, 3, 5, 6], "alreadi": [1, 5, 6], "exist": [1, 4, 5, 6, 17], "inconsistentmethodparameterserror": 1, "method": [1, 2, 3, 4, 5, 6, 8, 13, 17], "ha": [1, 4, 5, 6, 8], "been": [1, 6], "call": [1, 4, 8], "appropri": 1, "paramet": [1, 2, 3, 4, 5, 6, 8, 17], "operatornotsupportederror": 1, "notimplementederror": 1, "correctli": [1, 17], "implement": [1, 2, 3, 4, 5, 6, 8, 17], "class": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16], "parameternotfounderror": 1, "keyerror": [1, 5, 6, 17], "need": [1, 4, 5, 6, 8], "found": 1, "qualiti": [1, 4, 6, 8], "measur": [1, 4, 6, 8], "process": [1, 17], "subgroupparameternotfounderror": 1, "e": [1, 3, 4, 5, 6], "verticallistsizeerror": 1, "valueerror": 1, "compar": [1, 4, 5, 6], "vertic": [1, 4, 6], "list": [1, 3, 4, 5, 6, 17], "differ": [1, 4, 17], "size": [1, 4, 5, 6], "maximum_negative_overlap": [2, 3], "maximum_positive_overlap": [2, 3], "input_line_regex_pattern": [2, 3], "beta": [2, 3], "input_file_path": [2, 3], "max_sl": [2, 3], "output_file_path": [2, 3], "sl_max_siz": [2, 3], "max_depth": [2, 4], "minimum_support": [2, 4], "num_subgroup": [2, 4], "selected_subgroup": [2, 4], "unselected_subgroup": [2, 4], "visited_subgroup": [2, 4], "top_pattern": [2, 4], "additional_parameters_for_the_quality_measur": [2, 4], "minimum_fp": [2, 4, 6], "minimum_n": [2, 4, 6], "minimum_quality_measure_valu": [2, 4], "minimum_tp": [2, 4, 6], "visited_nod": [2, 4], "conditional_pruned_branch": [2, 4], "k_subgroup": [2, 4], "optimistic_estim": [2, 4, 6], "pruned_subgroup": [2, 4], "sort_criterion": [2, 4], "sort_criterion_no_ord": [2, 4], "sort_criterion_quality_ascend": [2, 4], "sort_criterion_quality_descend": [2, 4], "vertical_lists_implement": [2, 4], "vertical_lists_with_bitset": [2, 4], "vertical_lists_with_set": [2, 4], "additional_parameters_for_the_optimistic_estim": [2, 4], "oe_minimum_threshold": [2, 4], "q_minimum_threshold": [2, 4], "sort_criterion_in_other_s": [2, 4], "sort_criterion_in_s1": [2, 4], "root": [2, 6, 8], "all": [2, 4, 6, 8, 9, 17], "abstract": [2, 6, 8], "cannot": [2, 6, 8], "instanti": [2, 6, 8], "abc": [2, 6, 8], "defin": [2, 5, 6, 8], "pandas_datafram": [2, 3, 4, 5, 6, 17], "main": [2, 3, 4], "run": [2, 3, 4, 9], "correspond": [2, 4, 5, 6, 8], "panda": [2, 3, 4, 5, 6, 7, 17], "frame": [2, 3, 4, 5, 6, 7, 17], "datafram": [2, 3, 4, 5, 6, 7, 17], "scan": [2, 3, 4, 6], "tupl": [2, 3, 4, 5, 6, 17], "str": [2, 3, 4, 5, 6, 8, 17], "2": [2, 3, 4, 5, 6, 17], "element": [2, 3, 4, 5, 6], "name": [2, 3, 4, 5, 6, 8, 17], "return": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17], "none": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15], "repres": [3, 4, 5, 6], "path": [3, 4, 17], "from": [3, 4, 5, 6], "bitarrai": [3, 6], "read": [3, 17], "int": [3, 4, 5, 6, 8, 17], "maximum": [3, 4, 17], "number": [3, 4, 6, 17], "gener": [3, 4, 5, 6, 17], "each": [3, 4, 5, 6], "float": [3, 4, 5, 6, 8, 17], "level": 3, "normal": 3, "compress": 3, "gain": 3, "posit": [3, 4, 6, 8], "overlap": 3, "factor": 3, "permit": 3, "candid": [3, 5, 6], "ad": [3, 5, 6], "onli": [3, 4, 5, 6, 17], "its": [3, 4, 6], "than": [3, 4, 5], "close": 3, "0": [3, 4, 6, 17], "ar": [3, 4, 5, 6, 8], "stricter": 3, "allow": [3, 5, 6], "while": 3, "1": [3, 4, 5, 6], "more": [3, 4, 5], "neg": [3, 6, 8], "result": [3, 4, 6, 17], "written": [3, 4], "nomin": [3, 4, 6], "import": [3, 4, 5, 6, 8, 17], "miss": [3, 4, 6], "properti": [3, 4, 5, 6], "classvar": [3, 4, 8], "p": [3, 4], "A": [3, 4, 5, 6], "za": 3, "z0": 3, "9_": 3, "positive_bitarrai": 3, "01": 3, "negative_bitarrai": 3, "min_support": [4, 6], "write_results_in_fil": 4, "fals": [4, 6], "file_path": 4, "union": [4, 5, 6, 8], "minimum": [4, 6], "threshold": [4, 6], "OF": [4, 6], "time": [4, 6], "NOT": [4, 5, 6], "proport": [4, 6], "final": 4, "optimist": [4, 6, 8], "estim": [4, 6, 8], "max": 4, "calcul": 4, "prune": [4, 6], "depth": [4, 6], "search": 4, "dict": [4, 6, 8], "pass": [4, 5, 6, 17], "apart": 4, "thei": 4, "specifi": 4, "here": 4, "bool": [4, 5, 6], "whether": [4, 5, 6], "obtain": [4, 17], "By": [4, 6], "default": [4, 6], "option": [4, 6], "true": [4, 5, 6, 8], "tuple_target_attribute_valu": [4, 6], "input": [4, 6, 17], "It": [4, 5, 6, 8], "veri": [4, 6], "respect": [4, 6], "follow": [4, 5, 6], "condit": [4, 6], "must": [4, 5, 6], "3": [4, 5, 6], "same": [4, 5, 6], "first": [4, 6], "second": [4, 6], "example1": [4, 6], "ag": [4, 6], "25": [4, 6], "example2": [4, 6], "setosa": [4, 6], "string": [4, 6], "BE": [4, 6], "4": [4, 5, 6], "best": 4, "The": [4, 5, 6], "select": 4, "visit": 4, "cat": 4, "max_complex": 4, "coverage_thld": 4, "or_thld": 4, "p_val_thld": 4, "05": 4, "abs_contribution_thld": 4, "contribution_thld": 4, "5": [4, 5], "delta": 4, "write_stats_in_fil": 4, "stats_path": 4, "column": [4, 6], "If": [4, 5, 6, 17], "we": [4, 5, 6, 9, 17], "take": 4, "most": 4, "frequent": [4, 6], "ones": [4, 6], "complex": [4, 17], "length": [4, 6], "odd": 4, "ratio": 4, "adjust": 4, "correct": 4, "confound": 4, "absolut": [4, 8], "contribut": 4, "where": 4, "statist": 4, "html": 4, "consid": [4, 6], "higher": 4, "effect": 4, "top": 4, "yet": [4, 6], "test_datafram": 4, "write_to_fil": 4, "can": [4, 5, 8], "after": [4, 6, 17], "dictionari": [4, 6, 8], "credibl": [4, 6], "unselect": 4, "two": [4, 6], "could": [4, 6], "separ": [4, 5, 6], "mean": [4, 5, 6], "have": [4, 6], "addit": [4, 6], "execut": 4, "befor": [4, 6, 13], "node": [4, 6], "space": 4, "equival": [4, 6], "branch": [4, 6], "k": 4, "becaus": [4, 5], "order": [4, 5, 6, 8], "bitset": [4, 6], "criterion": 4, "sort": [4, 5, 6], "one": [4, 5, 6, 8], "three": 4, "possibl": 4, "ascend": 4, "descend": 4, "do": [4, 6], "maintain": 4, "set": [4, 6, 13, 17], "avaibl": 5, "qualnam": 5, "start": [5, 6], "boundari": 5, "enum": 5, "enumer": 5, "provid": 5, "avail": 5, "6": 5, "left_el": 5, "right_el": 5, "express": 5, "self": [5, 6], "between": 5, "both": [5, 6], "except": [5, 6, 17], "seri": 5, "left": 5, "also": [5, 6, 8], "comparison": 5, "whole": 5, "arrai": 5, "right": 5, "In": 5, "case": 5, "static": 5, "input_str": 5, "non": 5, "repeat": 5, "object": [5, 6], "assum": [5, 6, 17], "doe": [5, 6], "noth": [5, 6], "WITH": 5, "THE": 5, "immut": 5, "format": [5, 17], "regular": 5, "empti": [5, 6], "index": [5, 6], "get": [5, 6, 8], "out": 5, "rang": 5, "indexerror": 5, "check": [5, 6], "row": [5, 6, 17], "refinement_candid": 5, "refinement_of_itself": 5, "refin": 5, "itself": 5, "sometim": 5, "mai": 5, "better": 5, "ye": 5, "therefor": [5, 6], "remov": [5, 6], "structur": [5, 6], "whitespac": 5, "Be": 5, "care": 5, "part": 5, "side": 5, "variabl": 5, "interest": 5, "retriev": [5, 17], "certain": [5, 17], "inform": 5, "relat": 5, "form": [5, 17], "boolean": 5, "indic": [5, 6], "cover": [5, 6, 17], "y": 5, "x": 5, "variant": 6, "set_of_frequent_selector": 6, "build": 6, "complet": 6, "tree": 6, "l": 6, "discret": 6, "intern": 6, "dicttionari": 6, "insert": 6, "kei": [6, 8], "convert": 6, "entri": 6, "store": 6, "creat": [6, 9], "regress": 6, "model": 6, "target_column": 6, "df": 6, "list_of_candidate_pattern": 6, "instanc": [6, 8, 17], "cell": 6, "appear": 6, "otherwis": 6, "those": [6, 8], "fptree": 6, "concaten": 6, "header": 6, "tabl": 6, "follow_node_link": 6, "print": 6, "id": 6, "horizont": 6, "accord": [6, 17], "summat": 6, "child": 6, "min_optimistic_estim": 6, "additional_paramet": 6, "depend": 6, "situat": 6, "next": 6, "child_nod": 6, "current": 6, "delet": 6, "anymor": 6, "whose": 6, "wa": 6, "children": 6, "current_depth": 6, "subtre": 6, "dataset_target_bitarray_of_posit": 6, "dataset_target_bitarray_of_neg": 6, "bitarray_of_posit": 6, "bitarray_of_neg": 6, "individu": 6, "end": 6, "rule": 6, "distribut": [6, 17], "last": 6, "origin": [6, 8, 17], "conceptu": 6, "similar": 6, "dict_of_paramet": [6, 8], "modifi": 6, "other_vertical_list": 6, "return_none_if_n_is_0": 6, "impli": 6, "sequenc": 6, "intersect": 6, "make": 6, "ani": 6, "instead": 6, "matter": 6, "would": 6, "modif": 8, "weight": 8, "rel": 8, "accuraci": 8, "alwai": 8, "you": 8, "purpos": 8, "necessari": 8, "binomi": 8, "f1": 8, "score": 8, "increment": 8, "respons": 8, "rate": 8, "predict": 8, "piatetski": 8, "shapiro": 8, "generalis": 8, "g": 8, "includ": [8, 17], "recal": 8, "submodul": [9, 10], "test_dslm": [9, 10], "test_gmsl": [9, 10], "test_bsd": [9, 10], "test_cbsd": [9, 10], "test_cpbsd": [9, 10], "test_qfind": [9, 10], "test_sdmap": [9, 10], "test_sdmapstar": [9, 10], "test_vlsd": [9, 10], "testoper": [9, 13], "test_operator_evaluate_method": [9, 13], "test_operator_evaluate_method_with_pandasseri": [9, 13], "test_operator_generate_from_str_method": [9, 13], "test_operator_string_represent": [9, 13], "testpattern": [9, 13], "test_pattern_contains_method": [9, 13], "test_pattern_gener": [9, 13], "test_pattern_is_contained_method": [9, 13], "test_pattern_is_refinement_method": [9, 13], "testselector": [9, 13], "setup": [9, 13], "test_selector_attribut": [9, 13], "test_selector_comparison": [9, 13], "test_selector_creation_process": [9, 13], "test_selector_deletion_process": [9, 13], "test_selector_generate_from_str_method": [9, 13], "test_selector_match_method": [9, 13], "test_selector_same_value_different_typ": [9, 13], "testsubgroup": [9, 13], "test_subgroup_filt": [9, 13], "test_subgroup_gener": [9, 13], "test_subgroup_is_refinement_method": [9, 13], "testfptreeforsdmap": [9, 14], "test_fptreeforsdmap_build_tree_1": [9, 14], "test_fptreeforsdmap_build_tree_2": [9, 14], "test_fptreeforsdmap_build_tree_3": [9, 14], "test_fptreeforsdmap_build_tree_4": [9, 14], "test_fptreeforsdmap_generate_conditional_fp_tree_1": [9, 14], "test_fptreeforsdmap_generate_conditional_fp_tree_2": [9, 14], "test_fptreeforsdmap_generate_set_of_frequent_selectors_1": [9, 14], "test_fptreeforsdmap_generate_set_of_frequent_selectors_2": [9, 14], "test_fptreeforsdmap_generate_set_of_frequent_selectors_3": [9, 14], "testfptreenod": [9, 14], "test_fptreenode_gener": [9, 14], "testsubgrouplist": [9, 14], "test_subgroup_list_1": [9, 14], "test_subgroup_list_2": [9, 14], "test_subgroup_list_3": [9, 14], "test_subgroup_list_4": [9, 14], "testverticallistwithbitset": [9, 14], "test_vertical_list_1": [9, 14], "test_vertical_list_2": [9, 14], "test_vertical_list_3": [9, 14], "test_vertical_list_str_method": [9, 14], "testverticallistwithset": [9, 14], "testqualitymeasur": [9, 15], "test_quality_measures_comput": [9, 15], "test_quality_measures_gener": [9, 15], "test_quality_measures_value_of_class_vari": [9, 15], "testdataframefilt": [9, 16], "test_dataframe_filters_gener": [9, 16], "testtoinputformatforsubgrouplistalgorithm": [9, 16], "test_to_input_format_for_subgroup_list_algorithms_1": [9, 16], "test_to_input_format_for_subgroup_list_algorithms_2": [9, 16], "test_to_input_format_for_subgroup_list_algorithms_3": [9, 16], "__init__": 9, "py": [9, 11, 12, 13, 14, 16], "function": [9, 11, 12, 13, 14, 15, 16, 17], "testdslm": [10, 11], "test_dslm_compute_overlap_factor_function_1": [10, 11], "test_dslm_compute_overlap_factor_function_2": [10, 11], "test_dslm_compute_overlap_factor_function_3": [10, 11], "test_dslm_counter_of_subgroups_1": [10, 11], "test_dslm_counter_of_subgroups_2": [10, 11], "testgmsl": [10, 11], "test_gmsl_fit_method_1": [10, 11], "test_gmsl_load_candidates_method_1": [10, 11], "test_gmsl_load_candidates_method_2": [10, 11], "test_gmsl_load_candidates_method_3": [10, 11], "test_gmsl_load_candidates_method_4": [10, 11], "test_gmsl_load_candidates_method_5": [10, 11], "test_gmsl_mdl_functions_1": [10, 11], "test_gmsl_mdl_functions_2": [10, 11], "test_gmsl_mdl_functions_3": [10, 11], "testbsd": [10, 12], "test_bsd_cardin": [10, 12], "test_bsd_checkrel": [10, 12], "test_bsd_checkrelev": [10, 12], "test_bsd_fit1": [10, 12], "test_bsd_fit2": [10, 12], "test_bsd_fit3": [10, 12], "test_bsd_fit4": [10, 12], "test_bsd_init_method": [10, 12], "test_bsd_logicaland": [10, 12], "testcbsd": [10, 12], "test_cbsd_checkrel": [10, 12], "test_cbsd_checkrelev": [10, 12], "test_cbsd_fit1": [10, 12], "test_cbsd_fit2": [10, 12], "test_cbsd_fit3": [10, 12], "test_cbsd_fit4": [10, 12], "test_cbsd_init_method": [10, 12], "testcpbsd": [10, 12], "test_cpbsd_checkrel": [10, 12], "test_cpbsd_checkrelev": [10, 12], "test_cpbsd_fit1": [10, 12], "test_cpbsd_fit2": [10, 12], "test_cpbsd_fit3": [10, 12], "test_cpbsd_fit4": [10, 12], "test_cpbsd_init_method": [10, 12], "testqfind": [10, 12], "test_qfinder_fit": [10, 12], "test_qfinder_generate_candidate_patterns1": [10, 12], "test_qfinder_generate_candidate_patterns2": [10, 12], "test_qfinder_handle_individual_result": [10, 12], "test_qfinder_init_method1": [10, 12], "test_qfinder_init_method2": [10, 12], "testsdmap": [10, 12], "test_sdmap_additional_parameters_in_fit_method": [10, 12], "test_sdmap_fit_method_1": [10, 12], "test_sdmap_fit_method_10": [10, 12], "test_sdmap_fit_method_11": [10, 12], "test_sdmap_fit_method_2": [10, 12], "test_sdmap_fit_method_3": [10, 12], "test_sdmap_fit_method_4": [10, 12], "test_sdmap_fit_method_5": [10, 12], "test_sdmap_fit_method_6": [10, 12], "test_sdmap_fit_method_7": [10, 12], "test_sdmap_fit_method_8": [10, 12], "test_sdmap_fit_method_9": [10, 12], "test_sdmap_fpgrowth_method_1": [10, 12], "test_sdmap_fpgrowth_method_2": [10, 12], "test_sdmap_fpgrowth_method_3": [10, 12], "test_sdmap_fpgrowth_method_4": [10, 12], "test_sdmap_init_method_1": [10, 12], "test_sdmap_init_method_2": [10, 12], "test_sdmap_unselected_and_selected_subgroup": [10, 12], "testsdmapstar": [10, 12], "test_sdmapstar_additional_parameters_in_fit_method": [10, 12], "test_sdmapstar_fit_method_1": [10, 12], "test_sdmapstar_fit_method_10": [10, 12], "test_sdmapstar_fit_method_2": [10, 12], "test_sdmapstar_fit_method_3": [10, 12], "test_sdmapstar_fit_method_4": [10, 12], "test_sdmapstar_fit_method_5": [10, 12], "test_sdmapstar_fit_method_6": [10, 12], "test_sdmapstar_fit_method_7": [10, 12], "test_sdmapstar_fit_method_8": [10, 12], "test_sdmapstar_fit_method_9": [10, 12], "test_sdmapstar_fpgrowth_method_1": [10, 12], "test_sdmapstar_fpgrowth_method_2": [10, 12], "test_sdmapstar_fpgrowth_method_3": [10, 12], "test_sdmapstar_fpgrowth_method_4": [10, 12], "test_sdmapstar_init_method_1": [10, 12], "test_sdmapstar_init_method_2": [10, 12], "test_sdmapstar_unselected_and_selected_subgroups_1": [10, 12], "test_sdmapstar_unselected_and_selected_subgroups_2": [10, 12], "testvlsd": [10, 12], "test_vlsd_additional_parameters_in_fit_method": [10, 12], "test_vlsd_fit_method_1": [10, 12], "test_vlsd_fit_method_2": [10, 12], "test_vlsd_fit_method_3": [10, 12], "test_vlsd_fit_method_4": [10, 12], "test_vlsd_fit_method_5": [10, 12], "test_vlsd_fit_method_6": [10, 12], "test_vlsd_fit_method_7": [10, 12], "test_vlsd_init_method_1": [10, 12], "test_vlsd_init_method_2": [10, 12], "methodnam": [11, 12, 13, 14, 15, 16], "runtest": [11, 12, 13, 14, 15, 16], "testcas": [11, 12, 13, 14, 15, 16], "hook": 13, "up": 13, "fixtur": 13, "exercis": 13, "folder": 15, "criteria": 17, "transform": 17, "original_file_path": 17, "transformed_file_path": 17, "tradit": 17, "mine": 17, "principl": 17, "number_of_categori": 17, "number_of_sampl": 17, "logarithm": 17, "multinomi": 17, "categori": 17, "point": 17, "sampl": 17, "regist": 17, "input_integer_valu": 17, "univers": 17, "code": 17, "ln": 17, "integ": 17, "maximum_integer_valu": 17}, "objects": {"": [[1, 0, 0, "-", "subgroups"]], "subgroups": [[2, 0, 0, "-", "algorithms"], [5, 0, 0, "-", "core"], [6, 0, 0, "-", "data_structures"], [7, 0, 0, "-", "datasets"], [1, 0, 0, "-", "exceptions"], [8, 0, 0, "-", "quality_measures"], [9, 0, 0, "-", "tests"], [17, 0, 0, "-", "utils"]], "subgroups.algorithms": [[2, 0, 0, "-", "algorithm"], [3, 0, 0, "-", "subgroup_lists"], [4, 0, 0, "-", "subgroup_sets"]], "subgroups.algorithms.algorithm": [[2, 1, 1, "", "Algorithm"]], "subgroups.algorithms.algorithm.Algorithm": [[2, 2, 1, "", "fit"]], "subgroups.algorithms.subgroup_lists": [[3, 0, 0, "-", "dslm"], [3, 0, 0, "-", "gmsl"], [3, 0, 0, "-", "psld"]], "subgroups.algorithms.subgroup_lists.dslm": [[3, 1, 1, "", "DSLM"]], "subgroups.algorithms.subgroup_lists.dslm.DSLM": [[3, 2, 1, "", "fit"], [3, 3, 1, "", "maximum_negative_overlap"], [3, 3, 1, "", "maximum_positive_overlap"]], "subgroups.algorithms.subgroup_lists.gmsl": [[3, 1, 1, "", "GMSL"]], "subgroups.algorithms.subgroup_lists.gmsl.GMSL": [[3, 4, 1, "", "INPUT_LINE_REGEX_PATTERN"], [3, 3, 1, "", "beta"], [3, 2, 1, "", "fit"], [3, 3, 1, "", "input_file_path"], [3, 3, 1, "", "max_sl"], [3, 3, 1, "", "output_file_path"]], "subgroups.algorithms.subgroup_lists.psld": [[3, 1, 1, "", "PSLD"]], "subgroups.algorithms.subgroup_lists.psld.PSLD": [[3, 2, 1, "", "fit"], [3, 3, 1, "", "sl_max_size"]], "subgroups.algorithms.subgroup_sets": [[4, 0, 0, "-", "bsd"], [4, 0, 0, "-", "cbsd"], [4, 0, 0, "-", "cpbsd"], [4, 0, 0, "-", "qfinder"], [4, 0, 0, "-", "sdmap"], [4, 0, 0, "-", "sdmapstar"], [4, 0, 0, "-", "vlsd"]], "subgroups.algorithms.subgroup_sets.bsd": [[4, 1, 1, "", "BSD"]], "subgroups.algorithms.subgroup_sets.bsd.BSD": [[4, 2, 1, "", "fit"], [4, 3, 1, "", "max_depth"], [4, 3, 1, "", "minimum_support"], [4, 3, 1, "", "num_subgroups"], [4, 3, 1, "", "quality_measure"], [4, 3, 1, "", "selected_subgroups"], [4, 3, 1, "", "unselected_subgroups"], [4, 3, 1, "", "visited_subgroups"]], "subgroups.algorithms.subgroup_sets.cbsd": [[4, 1, 1, "", "CBSD"]], "subgroups.algorithms.subgroup_sets.cpbsd": [[4, 1, 1, "", "CPBSD"]], "subgroups.algorithms.subgroup_sets.qfinder": [[4, 1, 1, "", "QFinder"]], "subgroups.algorithms.subgroup_sets.qfinder.QFinder": [[4, 2, 1, "", "fit"], [4, 3, 1, "", "selected_subgroups"], [4, 2, 1, "", "test_subgroups"], [4, 3, 1, "", "top_patterns"], [4, 3, 1, "", "unselected_subgroups"], [4, 3, 1, "", "visited_subgroups"]], "subgroups.algorithms.subgroup_sets.sdmap": [[4, 1, 1, "", "SDMap"]], "subgroups.algorithms.subgroup_sets.sdmap.SDMap": [[4, 3, 1, "", "additional_parameters_for_the_quality_measure"], [4, 2, 1, "", "fit"], [4, 3, 1, "", "minimum_fp"], [4, 3, 1, "", "minimum_n"], [4, 3, 1, "", "minimum_quality_measure_value"], [4, 3, 1, "", "minimum_tp"], [4, 3, 1, "", "quality_measure"], [4, 3, 1, "", "selected_subgroups"], [4, 3, 1, "", "unselected_subgroups"], [4, 3, 1, "", "visited_nodes"]], "subgroups.algorithms.subgroup_sets.sdmapstar": [[4, 1, 1, "", "SDMapStar"]], "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar": [[4, 3, 1, "", "additional_parameters_for_the_quality_measure"], [4, 3, 1, "", "conditional_pruned_branches"], [4, 2, 1, "", "fit"], [4, 3, 1, "", "k_subgroups"], [4, 3, 1, "", "minimum_fp"], [4, 3, 1, "", "minimum_n"], [4, 3, 1, "", "minimum_quality_measure_value"], [4, 3, 1, "", "minimum_tp"], [4, 3, 1, "", "num_subgroups"], [4, 3, 1, "", "optimistic_estimate"], [4, 3, 1, "", "pruned_subgroups"], [4, 3, 1, "", "quality_measure"], [4, 3, 1, "", "selected_subgroups"], [4, 3, 1, "", "unselected_subgroups"], [4, 3, 1, "", "visited_nodes"]], "subgroups.algorithms.subgroup_sets.vlsd": [[4, 1, 1, "", "VLSD"]], "subgroups.algorithms.subgroup_sets.vlsd.VLSD": [[4, 4, 1, "", "SORT_CRITERION"], [4, 4, 1, "", "SORT_CRITERION_NO_ORDER"], [4, 4, 1, "", "SORT_CRITERION_QUALITY_ASCENDING"], [4, 4, 1, "", "SORT_CRITERION_QUALITY_DESCENDING"], [4, 4, 1, "", "VERTICAL_LISTS_IMPLEMENTATION"], [4, 4, 1, "", "VERTICAL_LISTS_WITH_BITSETS"], [4, 4, 1, "", "VERTICAL_LISTS_WITH_SETS"], [4, 3, 1, "", "additional_parameters_for_the_optimistic_estimate"], [4, 3, 1, "", "additional_parameters_for_the_quality_measure"], [4, 2, 1, "", "fit"], [4, 3, 1, "", "oe_minimum_threshold"], [4, 3, 1, "", "optimistic_estimate"], [4, 3, 1, "", "q_minimum_threshold"], [4, 3, 1, "", "quality_measure"], [4, 3, 1, "", "selected_subgroups"], [4, 3, 1, "", "sort_criterion_in_other_sizes"], [4, 3, 1, "", "sort_criterion_in_s1"], [4, 3, 1, "", "unselected_subgroups"], [4, 3, 1, "", "visited_nodes"]], "subgroups.core": [[5, 0, 0, "-", "operator"], [5, 0, 0, "-", "pattern"], [5, 0, 0, "-", "selector"], [5, 0, 0, "-", "subgroup"]], "subgroups.core.operator": [[5, 1, 1, "", "Operator"]], "subgroups.core.operator.Operator": [[5, 4, 1, "", "EQUAL"], [5, 4, 1, "", "GREATER"], [5, 4, 1, "", "GREATER_OR_EQUAL"], [5, 4, 1, "", "LESS"], [5, 4, 1, "", "LESS_OR_EQUAL"], [5, 4, 1, "", "NOT_EQUAL"], [5, 2, 1, "", "evaluate"], [5, 2, 1, "", "generate_from_str"]], "subgroups.core.pattern": [[5, 1, 1, "", "Pattern"]], "subgroups.core.pattern.Pattern": [[5, 2, 1, "", "add_selector"], [5, 2, 1, "", "copy"], [5, 2, 1, "", "generate_from_str"], [5, 2, 1, "", "get_selector"], [5, 2, 1, "", "is_contained"], [5, 2, 1, "", "is_refinement"], [5, 2, 1, "", "remove_selector"], [5, 2, 1, "", "remove_selector_by_index"]], "subgroups.core.selector": [[5, 1, 1, "", "Selector"]], "subgroups.core.selector.Selector": [[5, 3, 1, "", "attribute_name"], [5, 2, 1, "", "generate_from_str"], [5, 2, 1, "", "match"], [5, 3, 1, "", "operator"], [5, 3, 1, "", "value"]], "subgroups.core.subgroup": [[5, 1, 1, "", "Subgroup"]], "subgroups.core.subgroup.Subgroup": [[5, 2, 1, "", "copy"], [5, 3, 1, "", "description"], [5, 2, 1, "", "filter"], [5, 2, 1, "", "generate_from_str"], [5, 2, 1, "", "is_refinement"], [5, 3, 1, "", "target"]], "subgroups.data_structures": [[6, 0, 0, "-", "bitset_bsd"], [6, 0, 0, "-", "bitset_qfinder"], [6, 0, 0, "-", "fp_tree_for_sdmap"], [6, 0, 0, "-", "fp_tree_for_sdmapstar"], [6, 0, 0, "-", "fp_tree_node"], [6, 0, 0, "-", "subgroup_list"], [6, 0, 0, "-", "vertical_list"], [6, 0, 0, "-", "vertical_list_with_bitsets"], [6, 0, 0, "-", "vertical_list_with_sets"]], "subgroups.data_structures.bitset_bsd": [[6, 1, 1, "", "BitsetBSD"], [6, 1, 1, "", "BitsetDictionary"]], "subgroups.data_structures.bitset_bsd.BitsetBSD": [[6, 3, 1, "", "bitset_neg"], [6, 3, 1, "", "bitset_pos"], [6, 2, 1, "", "build_bitset"], [6, 2, 1, "", "generate_set_of_frequent_selectors"]], "subgroups.data_structures.bitset_qfinder": [[6, 1, 1, "", "Bitset_QFinder"]], "subgroups.data_structures.bitset_qfinder.Bitset_QFinder": [[6, 2, 1, "", "compute_credibility_measures"], [6, 2, 1, "", "generate_bitset"], [6, 2, 1, "", "get_non_empty_patterns"]], "subgroups.data_structures.fp_tree_for_sdmap": [[6, 1, 1, "", "FPTreeForSDMap"]], "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap": [[6, 2, 1, "", "build_tree"], [6, 2, 1, "", "generate_conditional_fp_tree"], [6, 2, 1, "", "generate_set_of_frequent_selectors"], [6, 3, 1, "", "header_table"], [6, 2, 1, "", "header_table_as_str"], [6, 2, 1, "", "is_empty"], [6, 3, 1, "", "root_node"], [6, 3, 1, "", "sorted_header_table"], [6, 2, 1, "", "there_is_a_single_path"], [6, 2, 1, "", "tree_as_str"]], "subgroups.data_structures.fp_tree_for_sdmapstar": [[6, 1, 1, "", "FPTreeForSDMapStar"]], "subgroups.data_structures.fp_tree_for_sdmapstar.FPTreeForSDMapStar": [[6, 2, 1, "", "generate_conditional_fp_tree_star"]], "subgroups.data_structures.fp_tree_node": [[6, 1, 1, "", "FPTreeNode"]], "subgroups.data_structures.fp_tree_node.FPTreeNode": [[6, 2, 1, "", "add_child"], [6, 3, 1, "", "counters"], [6, 2, 1, "", "delete_child_by_selector"], [6, 2, 1, "", "get_child_by_selector"], [6, 2, 1, "", "has_this_child"], [6, 2, 1, "", "is_child_of"], [6, 3, 1, "", "node_link"], [6, 3, 1, "", "number_of_children"], [6, 3, 1, "", "parent"], [6, 3, 1, "", "selector"], [6, 2, 1, "", "tree_as_str"]], "subgroups.data_structures.subgroup_list": [[6, 1, 1, "", "SubgroupList"]], "subgroups.data_structures.subgroup_list.SubgroupList": [[6, 2, 1, "", "add_subgroup"], [6, 3, 1, "", "dataset_number_of_negatives"], [6, 3, 1, "", "dataset_number_of_positives"], [6, 3, 1, "", "dataset_target_distribution"], [6, 3, 1, "", "default_rule_bitarray_of_negatives"], [6, 3, 1, "", "default_rule_bitarray_of_positives"], [6, 2, 1, "", "delete_last_subgroup"], [6, 2, 1, "", "get_subgroup"], [6, 2, 1, "", "get_subgroup_bitarray_of_negatives"], [6, 2, 1, "", "get_subgroup_bitarray_of_positives"], [6, 2, 1, "", "get_subgroup_original_bitarray_of_negatives"], [6, 2, 1, "", "get_subgroup_original_bitarray_of_positives"], [6, 2, 1, "", "is_empty"], [6, 3, 1, "", "number_of_dataset_instances"]], "subgroups.data_structures.vertical_list": [[6, 1, 1, "", "VerticalList"]], "subgroups.data_structures.vertical_list.VerticalList": [[6, 2, 1, "", "compute_quality_value"], [6, 3, 1, "", "fp"], [6, 2, 1, "", "join"], [6, 3, 1, "", "list_of_selectors"], [6, 3, 1, "", "n"], [6, 3, 1, "", "number_of_dataset_instances"], [6, 3, 1, "", "quality_value"], [6, 3, 1, "", "sequence_of_instances_fp"], [6, 3, 1, "", "sequence_of_instances_tp"], [6, 3, 1, "", "tp"]], "subgroups.data_structures.vertical_list_with_bitsets": [[6, 1, 1, "", "VerticalListWithBitsets"]], "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets": [[6, 2, 1, "", "compute_quality_value"], [6, 3, 1, "", "fp"], [6, 2, 1, "", "join"], [6, 3, 1, "", "n"], [6, 3, 1, "", "sequence_of_instances_fp"], [6, 3, 1, "", "sequence_of_instances_tp"], [6, 3, 1, "", "tp"]], "subgroups.data_structures.vertical_list_with_sets": [[6, 1, 1, "", "VerticalListWithSets"]], "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets": [[6, 2, 1, "", "compute_quality_value"], [6, 3, 1, "", "fp"], [6, 2, 1, "", "join"], [6, 3, 1, "", "n"], [6, 3, 1, "", "sequence_of_instances_fp"], [6, 3, 1, "", "sequence_of_instances_tp"], [6, 3, 1, "", "tp"]], "subgroups.datasets": [[7, 5, 1, "", "load_ballons_csv"], [7, 5, 1, "", "load_car_evaluation_csv"], [7, 5, 1, "", "load_covid_sp_csv"], [7, 5, 1, "", "load_credit_g_csv"], [7, 5, 1, "", "load_heart_disease_csv"], [7, 5, 1, "", "load_income_csv"], [7, 5, 1, "", "load_lenses_csv"], [7, 5, 1, "", "load_lymph_csv"], [7, 5, 1, "", "load_mushroom_csv"], [7, 5, 1, "", "load_shop_csv"], [7, 5, 1, "", "load_sick_csv"], [7, 5, 1, "", "load_tic_tac_toe_csv"], [7, 5, 1, "", "load_vote_csv"]], "subgroups.exceptions": [[1, 6, 1, "", "DatasetAttributeTypeError"], [1, 6, 1, "", "DuplicateFpTreeNodeError"], [1, 6, 1, "", "InconsistentMethodParametersError"], [1, 6, 1, "", "OperatorNotSupportedError"], [1, 6, 1, "", "ParameterNotFoundError"], [1, 6, 1, "", "SubgroupParameterNotFoundError"], [1, 6, 1, "", "VerticalListSizeError"]], "subgroups.quality_measures": [[8, 0, 0, "-", "absolute_wracc"], [8, 0, 0, "-", "binomial_test"], [8, 0, 0, "-", "binomial_test_optimistic_estimate_1"], [8, 0, 0, "-", "coverage"], [8, 0, 0, "-", "f1_score"], [8, 0, 0, "-", "irr"], [8, 0, 0, "-", "npv"], [8, 0, 0, "-", "piatetsky_shapiro"], [8, 0, 0, "-", "piatetsky_shapiro_optimistic_estimate_1"], [8, 0, 0, "-", "piatetsky_shapiro_optimistic_estimate_2"], [8, 0, 0, "-", "ppv"], [8, 0, 0, "-", "qg"], [8, 0, 0, "-", "quality_measure"], [8, 0, 0, "-", "sensitivity"], [8, 0, 0, "-", "specificity"], [8, 0, 0, "-", "support"], [8, 0, 0, "-", "wracc"], [8, 0, 0, "-", "wracc_optimistic_estimate_1"], [8, 0, 0, "-", "youden"]], "subgroups.quality_measures.absolute_wracc": [[8, 1, 1, "", "AbsoluteWRAcc"]], "subgroups.quality_measures.absolute_wracc.AbsoluteWRAcc": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.binomial_test": [[8, 1, 1, "", "BinomialTest"]], "subgroups.quality_measures.binomial_test.BinomialTest": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.binomial_test_optimistic_estimate_1": [[8, 1, 1, "", "BinomialTestOptimisticEstimate1"]], "subgroups.quality_measures.binomial_test_optimistic_estimate_1.BinomialTestOptimisticEstimate1": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.coverage": [[8, 1, 1, "", "Coverage"]], "subgroups.quality_measures.coverage.Coverage": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.f1_score": [[8, 1, 1, "", "F1Score"]], "subgroups.quality_measures.f1_score.F1Score": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.irr": [[8, 1, 1, "", "IRR"]], "subgroups.quality_measures.irr.IRR": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.npv": [[8, 1, 1, "", "NPV"]], "subgroups.quality_measures.npv.NPV": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.piatetsky_shapiro": [[8, 1, 1, "", "PiatetskyShapiro"]], "subgroups.quality_measures.piatetsky_shapiro.PiatetskyShapiro": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1": [[8, 1, 1, "", "PiatetskyShapiroOptimisticEstimate1"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.PiatetskyShapiroOptimisticEstimate1": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2": [[8, 1, 1, "", "PiatetskyShapiroOptimisticEstimate2"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.PiatetskyShapiroOptimisticEstimate2": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.ppv": [[8, 1, 1, "", "PPV"]], "subgroups.quality_measures.ppv.PPV": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.qg": [[8, 1, 1, "", "Qg"]], "subgroups.quality_measures.qg.Qg": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.quality_measure": [[8, 1, 1, "", "QualityMeasure"]], "subgroups.quality_measures.quality_measure.QualityMeasure": [[8, 4, 1, "", "FALSE_POPULATION"], [8, 4, 1, "", "FALSE_POSITIVES"], [8, 4, 1, "", "TRUE_POPULATION"], [8, 4, 1, "", "TRUE_POSITIVES"], [8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.sensitivity": [[8, 1, 1, "", "Sensitivity"]], "subgroups.quality_measures.sensitivity.Sensitivity": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.specificity": [[8, 1, 1, "", "Specificity"]], "subgroups.quality_measures.specificity.Specificity": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.support": [[8, 1, 1, "", "Support"]], "subgroups.quality_measures.support.Support": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.wracc": [[8, 1, 1, "", "WRAcc"]], "subgroups.quality_measures.wracc.WRAcc": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.wracc_optimistic_estimate_1": [[8, 1, 1, "", "WRAccOptimisticEstimate1"]], "subgroups.quality_measures.wracc_optimistic_estimate_1.WRAccOptimisticEstimate1": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.quality_measures.youden": [[8, 1, 1, "", "Youden"]], "subgroups.quality_measures.youden.Youden": [[8, 2, 1, "", "compute"], [8, 2, 1, "", "get_name"], [8, 2, 1, "", "optimistic_estimate_of"]], "subgroups.tests": [[10, 0, 0, "-", "algorithms"], [13, 0, 0, "-", "core"], [14, 0, 0, "-", "data_structures"], [15, 0, 0, "-", "quality_measures"], [9, 5, 1, "", "run_all_tests"], [16, 0, 0, "-", "utils"]], "subgroups.tests.algorithms": [[11, 0, 0, "-", "subgroup_lists"], [12, 0, 0, "-", "subgroup_sets"]], "subgroups.tests.algorithms.subgroup_lists": [[11, 0, 0, "-", "test_dslm"], [11, 0, 0, "-", "test_gmsl"]], "subgroups.tests.algorithms.subgroup_lists.test_dslm": [[11, 1, 1, "", "TestDSLM"]], "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM": [[11, 2, 1, "", "test_DSLM_compute_overlap_factor_function_1"], [11, 2, 1, "", "test_DSLM_compute_overlap_factor_function_2"], [11, 2, 1, "", "test_DSLM_compute_overlap_factor_function_3"], [11, 2, 1, "", "test_DSLM_counter_of_subgroups_1"], [11, 2, 1, "", "test_DSLM_counter_of_subgroups_2"]], "subgroups.tests.algorithms.subgroup_lists.test_gmsl": [[11, 1, 1, "", "TestGMSL"]], "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL": [[11, 2, 1, "", "test_GMSL_fit_method_1"], [11, 2, 1, "", "test_GMSL_load_candidates_method_1"], [11, 2, 1, "", "test_GMSL_load_candidates_method_2"], [11, 2, 1, "", "test_GMSL_load_candidates_method_3"], [11, 2, 1, "", "test_GMSL_load_candidates_method_4"], [11, 2, 1, "", "test_GMSL_load_candidates_method_5"], [11, 2, 1, "", "test_GMSL_mdl_functions_1"], [11, 2, 1, "", "test_GMSL_mdl_functions_2"], [11, 2, 1, "", "test_GMSL_mdl_functions_3"]], "subgroups.tests.algorithms.subgroup_sets": [[12, 0, 0, "-", "test_bsd"], [12, 0, 0, "-", "test_cbsd"], [12, 0, 0, "-", "test_cpbsd"], [12, 0, 0, "-", "test_qfinder"], [12, 0, 0, "-", "test_sdmap"], [12, 0, 0, "-", "test_sdmapstar"], [12, 0, 0, "-", "test_vlsd"]], "subgroups.tests.algorithms.subgroup_sets.test_bsd": [[12, 1, 1, "", "TestBSD"]], "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD": [[12, 2, 1, "", "test_BSD_cardinality"], [12, 2, 1, "", "test_BSD_checkRel"], [12, 2, 1, "", "test_BSD_checkRelevancies"], [12, 2, 1, "", "test_BSD_fit1"], [12, 2, 1, "", "test_BSD_fit2"], [12, 2, 1, "", "test_BSD_fit3"], [12, 2, 1, "", "test_BSD_fit4"], [12, 2, 1, "", "test_BSD_init_method"], [12, 2, 1, "", "test_BSD_logicalAnd"]], "subgroups.tests.algorithms.subgroup_sets.test_cbsd": [[12, 1, 1, "", "TestCBSD"]], "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD": [[12, 2, 1, "", "test_CBSD_checkRel"], [12, 2, 1, "", "test_CBSD_checkRelevancies"], [12, 2, 1, "", "test_CBSD_fit1"], [12, 2, 1, "", "test_CBSD_fit2"], [12, 2, 1, "", "test_CBSD_fit3"], [12, 2, 1, "", "test_CBSD_fit4"], [12, 2, 1, "", "test_CBSD_init_method"]], "subgroups.tests.algorithms.subgroup_sets.test_cpbsd": [[12, 1, 1, "", "TestCPBSD"]], "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD": [[12, 2, 1, "", "test_CPBSD_checkRel"], [12, 2, 1, "", "test_CPBSD_checkRelevancies"], [12, 2, 1, "", "test_CPBSD_fit1"], [12, 2, 1, "", "test_CPBSD_fit2"], [12, 2, 1, "", "test_CPBSD_fit3"], [12, 2, 1, "", "test_CPBSD_fit4"], [12, 2, 1, "", "test_CPBSD_init_method"]], "subgroups.tests.algorithms.subgroup_sets.test_qfinder": [[12, 1, 1, "", "TestQFinder"]], "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder": [[12, 2, 1, "", "test_QFinder_fit"], [12, 2, 1, "", "test_QFinder_generate_candidate_patterns1"], [12, 2, 1, "", "test_QFinder_generate_candidate_patterns2"], [12, 2, 1, "", "test_QFinder_handle_individual_result"], [12, 2, 1, "", "test_QFinder_init_method1"], [12, 2, 1, "", "test_QFinder_init_method2"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmap": [[12, 1, 1, "", "TestSDMap"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap": [[12, 2, 1, "", "test_SDMap_additional_parameters_in_fit_method"], [12, 2, 1, "", "test_SDMap_fit_method_1"], [12, 2, 1, "", "test_SDMap_fit_method_10"], [12, 2, 1, "", "test_SDMap_fit_method_11"], [12, 2, 1, "", "test_SDMap_fit_method_2"], [12, 2, 1, "", "test_SDMap_fit_method_3"], [12, 2, 1, "", "test_SDMap_fit_method_4"], [12, 2, 1, "", "test_SDMap_fit_method_5"], [12, 2, 1, "", "test_SDMap_fit_method_6"], [12, 2, 1, "", "test_SDMap_fit_method_7"], [12, 2, 1, "", "test_SDMap_fit_method_8"], [12, 2, 1, "", "test_SDMap_fit_method_9"], [12, 2, 1, "", "test_SDMap_fpgrowth_method_1"], [12, 2, 1, "", "test_SDMap_fpgrowth_method_2"], [12, 2, 1, "", "test_SDMap_fpgrowth_method_3"], [12, 2, 1, "", "test_SDMap_fpgrowth_method_4"], [12, 2, 1, "", "test_SDMap_init_method_1"], [12, 2, 1, "", "test_SDMap_init_method_2"], [12, 2, 1, "", "test_SDMap_unselected_and_selected_subgroups"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar": [[12, 1, 1, "", "TestSDMapStar"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar": [[12, 2, 1, "", "test_SDMapStar_additional_parameters_in_fit_method"], [12, 2, 1, "", "test_SDMapStar_fit_method_1"], [12, 2, 1, "", "test_SDMapStar_fit_method_10"], [12, 2, 1, "", "test_SDMapStar_fit_method_2"], [12, 2, 1, "", "test_SDMapStar_fit_method_3"], [12, 2, 1, "", "test_SDMapStar_fit_method_4"], [12, 2, 1, "", "test_SDMapStar_fit_method_5"], [12, 2, 1, "", "test_SDMapStar_fit_method_6"], [12, 2, 1, "", "test_SDMapStar_fit_method_7"], [12, 2, 1, "", "test_SDMapStar_fit_method_8"], [12, 2, 1, "", "test_SDMapStar_fit_method_9"], [12, 2, 1, "", "test_SDMapStar_fpgrowth_method_1"], [12, 2, 1, "", "test_SDMapStar_fpgrowth_method_2"], [12, 2, 1, "", "test_SDMapStar_fpgrowth_method_3"], [12, 2, 1, "", "test_SDMapStar_fpgrowth_method_4"], [12, 2, 1, "", "test_SDMapStar_init_method_1"], [12, 2, 1, "", "test_SDMapStar_init_method_2"], [12, 2, 1, "", "test_SDMapStar_unselected_and_selected_subgroups_1"], [12, 2, 1, "", "test_SDMapStar_unselected_and_selected_subgroups_2"]], "subgroups.tests.algorithms.subgroup_sets.test_vlsd": [[12, 1, 1, "", "TestVLSD"]], "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD": [[12, 2, 1, "", "test_VLSD_additional_parameters_in_fit_method"], [12, 2, 1, "", "test_VLSD_fit_method_1"], [12, 2, 1, "", "test_VLSD_fit_method_2"], [12, 2, 1, "", "test_VLSD_fit_method_3"], [12, 2, 1, "", "test_VLSD_fit_method_4"], [12, 2, 1, "", "test_VLSD_fit_method_5"], [12, 2, 1, "", "test_VLSD_fit_method_6"], [12, 2, 1, "", "test_VLSD_fit_method_7"], [12, 2, 1, "", "test_VLSD_init_method_1"], [12, 2, 1, "", "test_VLSD_init_method_2"]], "subgroups.tests.core": [[13, 0, 0, "-", "test_operator"], [13, 0, 0, "-", "test_pattern"], [13, 0, 0, "-", "test_selector"], [13, 0, 0, "-", "test_subgroup"]], "subgroups.tests.core.test_operator": [[13, 1, 1, "", "TestOperator"]], "subgroups.tests.core.test_operator.TestOperator": [[13, 2, 1, "", "test_Operator_evaluate_method"], [13, 2, 1, "", "test_Operator_evaluate_method_with_pandasSeries"], [13, 2, 1, "", "test_Operator_generate_from_str_method"], [13, 2, 1, "", "test_Operator_string_representation"]], "subgroups.tests.core.test_pattern": [[13, 1, 1, "", "TestPattern"]], "subgroups.tests.core.test_pattern.TestPattern": [[13, 2, 1, "", "test_Pattern_contains_method"], [13, 2, 1, "", "test_Pattern_general"], [13, 2, 1, "", "test_Pattern_is_contained_method"], [13, 2, 1, "", "test_Pattern_is_refinement_method"]], "subgroups.tests.core.test_selector": [[13, 1, 1, "", "TestSelector"]], "subgroups.tests.core.test_selector.TestSelector": [[13, 2, 1, "", "setUp"], [13, 2, 1, "", "test_Selector_attributes"], [13, 2, 1, "", "test_Selector_comparisons"], [13, 2, 1, "", "test_Selector_creation_process"], [13, 2, 1, "", "test_Selector_deletion_process"], [13, 2, 1, "", "test_Selector_generate_from_str_method"], [13, 2, 1, "", "test_Selector_match_method"], [13, 2, 1, "", "test_Selector_same_value_different_type"]], "subgroups.tests.core.test_subgroup": [[13, 1, 1, "", "TestSubgroup"]], "subgroups.tests.core.test_subgroup.TestSubgroup": [[13, 2, 1, "", "test_Subgroup_filter"], [13, 2, 1, "", "test_Subgroup_general"], [13, 2, 1, "", "test_Subgroup_is_refinement_method"]], "subgroups.tests.data_structures": [[14, 0, 0, "-", "test_fp_tree_for_sdmap"], [14, 0, 0, "-", "test_fp_tree_node"], [14, 0, 0, "-", "test_subgroup_list"], [14, 0, 0, "-", "test_vertical_list_with_bitsets"], [14, 0, 0, "-", "test_vertical_list_with_sets"]], "subgroups.tests.data_structures.test_fp_tree_for_sdmap": [[14, 1, 1, "", "TestFPTreeForSDMap"]], "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap": [[14, 2, 1, "", "test_FPTreeForSDMap_build_tree_1"], [14, 2, 1, "", "test_FPTreeForSDMap_build_tree_2"], [14, 2, 1, "", "test_FPTreeForSDMap_build_tree_3"], [14, 2, 1, "", "test_FPTreeForSDMap_build_tree_4"], [14, 2, 1, "", "test_FPTreeForSDMap_generate_conditional_fp_tree_1"], [14, 2, 1, "", "test_FPTreeForSDMap_generate_conditional_fp_tree_2"], [14, 2, 1, "", "test_FPTreeForSDMap_generate_set_of_frequent_selectors_1"], [14, 2, 1, "", "test_FPTreeForSDMap_generate_set_of_frequent_selectors_2"], [14, 2, 1, "", "test_FPTreeForSDMap_generate_set_of_frequent_selectors_3"]], "subgroups.tests.data_structures.test_fp_tree_node": [[14, 1, 1, "", "TestFPTreeNode"]], "subgroups.tests.data_structures.test_fp_tree_node.TestFPTreeNode": [[14, 2, 1, "", "test_FPTreeNode_general"]], "subgroups.tests.data_structures.test_subgroup_list": [[14, 1, 1, "", "TestSubgroupList"]], "subgroups.tests.data_structures.test_subgroup_list.TestSubgroupList": [[14, 2, 1, "", "test_subgroup_list_1"], [14, 2, 1, "", "test_subgroup_list_2"], [14, 2, 1, "", "test_subgroup_list_3"], [14, 2, 1, "", "test_subgroup_list_4"]], "subgroups.tests.data_structures.test_vertical_list_with_bitsets": [[14, 1, 1, "", "TestVerticalListWithBitsets"]], "subgroups.tests.data_structures.test_vertical_list_with_bitsets.TestVerticalListWithBitsets": [[14, 2, 1, "", "test_vertical_list_1"], [14, 2, 1, "", "test_vertical_list_2"], [14, 2, 1, "", "test_vertical_list_3"], [14, 2, 1, "", "test_vertical_list_str_method"]], "subgroups.tests.data_structures.test_vertical_list_with_sets": [[14, 1, 1, "", "TestVerticalListWithSets"]], "subgroups.tests.data_structures.test_vertical_list_with_sets.TestVerticalListWithSets": [[14, 2, 1, "", "test_vertical_list_1"], [14, 2, 1, "", "test_vertical_list_2"], [14, 2, 1, "", "test_vertical_list_3"], [14, 2, 1, "", "test_vertical_list_str_method"]], "subgroups.tests.quality_measures": [[15, 0, 0, "-", "test_quality_measures"]], "subgroups.tests.quality_measures.test_quality_measures": [[15, 1, 1, "", "TestQualityMeasures"]], "subgroups.tests.quality_measures.test_quality_measures.TestQualityMeasures": [[15, 2, 1, "", "test_quality_measures_compute"], [15, 2, 1, "", "test_quality_measures_general"], [15, 2, 1, "", "test_quality_measures_value_of_class_variables"]], "subgroups.tests.utils": [[16, 0, 0, "-", "test_dataframe_filters"], [16, 0, 0, "-", "test_file_format_transformations"]], "subgroups.tests.utils.test_dataframe_filters": [[16, 1, 1, "", "TestDataFrameFilter"]], "subgroups.tests.utils.test_dataframe_filters.TestDataFrameFilter": [[16, 2, 1, "", "test_dataframe_filters_general"]], "subgroups.tests.utils.test_file_format_transformations": [[16, 1, 1, "", "TestToInputFormatForSubgroupListAlgorithms"]], "subgroups.tests.utils.test_file_format_transformations.TestToInputFormatForSubgroupListAlgorithms": [[16, 2, 1, "", "test_to_input_format_for_subgroup_list_algorithms_1"], [16, 2, 1, "", "test_to_input_format_for_subgroup_list_algorithms_2"], [16, 2, 1, "", "test_to_input_format_for_subgroup_list_algorithms_3"]], "subgroups.utils": [[17, 0, 0, "-", "dataframe_filters"], [17, 0, 0, "-", "file_format_transformations"], [17, 0, 0, "-", "mdl"]], "subgroups.utils.dataframe_filters": [[17, 5, 1, "", "filter_by_list_of_selectors"]], "subgroups.utils.file_format_transformations": [[17, 5, 1, "", "to_input_format_for_subgroup_list_algorithms"]], "subgroups.utils.mdl": [[17, 5, 1, "", "log2_multinomial_with_recurrence"], [17, 5, 1, "", "multinomial_with_recurrence"], [17, 5, 1, "", "universal_code_for_integer"], [17, 5, 1, "", "universal_code_for_integer_with_maximum"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"subgroup": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "document": 0, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "subpackag": [1, 2, 9, 10], "submodul": [1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17], "except": 1, "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "algorithm": [2, 3, 4, 10, 11, 12], "subgroup_list": [3, 6, 11], "dslm": 3, "gmsl": 3, "psld": 3, "subgroup_set": [4, 12], "bsd": 4, "cbsd": 4, "cpbsd": 4, "qfinder": 4, "sdmap": 4, "sdmapstar": 4, "vlsd": 4, "core": [5, 13], "oper": 5, "pattern": 5, "selector": 5, "data_structur": [6, 14], "bitset_bsd": 6, "bitset_qfind": 6, "fp_tree_for_sdmap": 6, "fp_tree_for_sdmapstar": 6, "fp_tree_nod": 6, "vertical_list": 6, "vertical_list_with_bitset": 6, "vertical_list_with_set": 6, "dataset": 7, "quality_measur": [8, 15], "absolute_wracc": 8, "binomial_test": 8, "binomial_test_optimistic_estimate_1": 8, "coverag": 8, "f1_score": 8, "irr": 8, "npv": 8, "piatetsky_shapiro": 8, "piatetsky_shapiro_optimistic_estimate_1": 8, "piatetsky_shapiro_optimistic_estimate_2": 8, "ppv": 8, "qg": 8, "sensit": 8, "specif": 8, "support": 8, "wracc": 8, "wracc_optimistic_estimate_1": 8, "youden": 8, "test": [9, 10, 11, 12, 13, 14, 15, 16], "test_dslm": 11, "test_gmsl": 11, "test_bsd": 12, "test_cbsd": 12, "test_cpbsd": 12, "test_qfind": 12, "test_sdmap": 12, "test_sdmapstar": 12, "test_vlsd": 12, "test_oper": 13, "test_pattern": 13, "test_selector": 13, "test_subgroup": 13, "test_fp_tree_for_sdmap": 14, "test_fp_tree_nod": 14, "test_subgroup_list": 14, "test_vertical_list_with_bitset": 14, "test_vertical_list_with_set": 14, "test_quality_measur": 15, "util": [16, 17], "test_dataframe_filt": 16, "test_file_format_transform": 16, "dataframe_filt": 17, "file_format_transform": 17, "mdl": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"subgroups documentation": [[0, "subgroups-documentation"]], "Contents:": [[0, null]], "subgroups package": [[1, "subgroups-package"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"], [9, "subpackages"], [10, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"]], "subgroups.exceptions module": [[1, "module-subgroups.exceptions"]], "Module contents": [[1, "module-subgroups"], [2, "module-subgroups.algorithms"], [3, "module-subgroups.algorithms.subgroup_lists"], [4, "module-subgroups.algorithms.subgroup_sets"], [5, "module-subgroups.core"], [6, "module-subgroups.data_structures"], [7, "module-subgroups.datasets"], [8, "module-subgroups.quality_measures"], [9, "module-subgroups.tests"], [10, "module-subgroups.tests.algorithms"], [11, "module-subgroups.tests.algorithms.subgroup_lists"], [12, "module-subgroups.tests.algorithms.subgroup_sets"], [13, "module-subgroups.tests.core"], [14, "module-subgroups.tests.data_structures"], [15, "module-subgroups.tests.quality_measures"], [16, "module-subgroups.tests.utils"], [17, "module-subgroups.utils"]], "subgroups.algorithms package": [[2, "subgroups-algorithms-package"]], "subgroups.algorithms.algorithm module": [[2, "module-subgroups.algorithms.algorithm"]], "subgroups.algorithms.subgroup_lists package": [[3, "subgroups-algorithms-subgroup-lists-package"]], "subgroups.algorithms.subgroup_lists.dslm module": [[3, "module-subgroups.algorithms.subgroup_lists.dslm"]], "subgroups.algorithms.subgroup_lists.gmsl module": [[3, "module-subgroups.algorithms.subgroup_lists.gmsl"]], "subgroups.algorithms.subgroup_lists.psld module": [[3, "module-subgroups.algorithms.subgroup_lists.psld"]], "subgroups.algorithms.subgroup_sets package": [[4, "subgroups-algorithms-subgroup-sets-package"]], "subgroups.algorithms.subgroup_sets.bsd module": [[4, "module-subgroups.algorithms.subgroup_sets.bsd"]], "subgroups.algorithms.subgroup_sets.cbsd module": [[4, "module-subgroups.algorithms.subgroup_sets.cbsd"]], "subgroups.algorithms.subgroup_sets.cpbsd module": [[4, "module-subgroups.algorithms.subgroup_sets.cpbsd"]], "subgroups.algorithms.subgroup_sets.qfinder module": [[4, "module-subgroups.algorithms.subgroup_sets.qfinder"]], "subgroups.algorithms.subgroup_sets.sdmap module": [[4, "module-subgroups.algorithms.subgroup_sets.sdmap"]], "subgroups.algorithms.subgroup_sets.sdmapstar module": [[4, "module-subgroups.algorithms.subgroup_sets.sdmapstar"]], "subgroups.algorithms.subgroup_sets.vlsd module": [[4, "module-subgroups.algorithms.subgroup_sets.vlsd"]], "subgroups.core package": [[5, "subgroups-core-package"]], "subgroups.core.operator module": [[5, "module-subgroups.core.operator"]], "subgroups.core.pattern module": [[5, "module-subgroups.core.pattern"]], "subgroups.core.selector module": [[5, "module-subgroups.core.selector"]], "subgroups.core.subgroup module": [[5, "module-subgroups.core.subgroup"]], "subgroups.data_structures package": [[6, "subgroups-data-structures-package"]], "subgroups.data_structures.bitset_bsd module": [[6, "module-subgroups.data_structures.bitset_bsd"]], "subgroups.data_structures.bitset_qfinder module": [[6, "module-subgroups.data_structures.bitset_qfinder"]], "subgroups.data_structures.fp_tree_for_sdmap module": [[6, "module-subgroups.data_structures.fp_tree_for_sdmap"]], "subgroups.data_structures.fp_tree_for_sdmapstar module": [[6, "module-subgroups.data_structures.fp_tree_for_sdmapstar"]], "subgroups.data_structures.fp_tree_node module": [[6, "module-subgroups.data_structures.fp_tree_node"]], "subgroups.data_structures.subgroup_list module": [[6, "module-subgroups.data_structures.subgroup_list"]], "subgroups.data_structures.vertical_list module": [[6, "module-subgroups.data_structures.vertical_list"]], "subgroups.data_structures.vertical_list_with_bitsets module": [[6, "module-subgroups.data_structures.vertical_list_with_bitsets"]], "subgroups.data_structures.vertical_list_with_sets module": [[6, "module-subgroups.data_structures.vertical_list_with_sets"]], "subgroups.datasets package": [[7, "subgroups-datasets-package"]], "subgroups.quality_measures package": [[8, "subgroups-quality-measures-package"]], "subgroups.quality_measures.absolute_wracc module": [[8, "module-subgroups.quality_measures.absolute_wracc"]], "subgroups.quality_measures.binomial_test module": [[8, "module-subgroups.quality_measures.binomial_test"]], "subgroups.quality_measures.binomial_test_optimistic_estimate_1 module": [[8, "module-subgroups.quality_measures.binomial_test_optimistic_estimate_1"]], "subgroups.quality_measures.coverage module": [[8, "module-subgroups.quality_measures.coverage"]], "subgroups.quality_measures.f1_score module": [[8, "module-subgroups.quality_measures.f1_score"]], "subgroups.quality_measures.irr module": [[8, "module-subgroups.quality_measures.irr"]], "subgroups.quality_measures.npv module": [[8, "module-subgroups.quality_measures.npv"]], "subgroups.quality_measures.piatetsky_shapiro module": [[8, "module-subgroups.quality_measures.piatetsky_shapiro"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1 module": [[8, "module-subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2 module": [[8, "module-subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2"]], "subgroups.quality_measures.ppv module": [[8, "module-subgroups.quality_measures.ppv"]], "subgroups.quality_measures.qg module": [[8, "module-subgroups.quality_measures.qg"]], "subgroups.quality_measures.quality_measure module": [[8, "module-subgroups.quality_measures.quality_measure"]], "subgroups.quality_measures.sensitivity module": [[8, "module-subgroups.quality_measures.sensitivity"]], "subgroups.quality_measures.specificity module": [[8, "module-subgroups.quality_measures.specificity"]], "subgroups.quality_measures.support module": [[8, "module-subgroups.quality_measures.support"]], "subgroups.quality_measures.wracc module": [[8, "module-subgroups.quality_measures.wracc"]], "subgroups.quality_measures.wracc_optimistic_estimate_1 module": [[8, "module-subgroups.quality_measures.wracc_optimistic_estimate_1"]], "subgroups.quality_measures.youden module": [[8, "module-subgroups.quality_measures.youden"]], "subgroups.tests package": [[9, "subgroups-tests-package"]], "subgroups.tests.algorithms package": [[10, "subgroups-tests-algorithms-package"]], "subgroups.tests.algorithms.subgroup_lists package": [[11, "subgroups-tests-algorithms-subgroup-lists-package"]], "subgroups.tests.algorithms.subgroup_lists.test_dslm module": [[11, "module-subgroups.tests.algorithms.subgroup_lists.test_dslm"]], "subgroups.tests.algorithms.subgroup_lists.test_gmsl module": [[11, "module-subgroups.tests.algorithms.subgroup_lists.test_gmsl"]], "subgroups.tests.algorithms.subgroup_sets package": [[12, "subgroups-tests-algorithms-subgroup-sets-package"]], "subgroups.tests.algorithms.subgroup_sets.test_bsd module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_bsd"]], "subgroups.tests.algorithms.subgroup_sets.test_cbsd module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_cbsd"]], "subgroups.tests.algorithms.subgroup_sets.test_cpbsd module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_cpbsd"]], "subgroups.tests.algorithms.subgroup_sets.test_qfinder module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_qfinder"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmap module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_sdmap"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_sdmapstar"]], "subgroups.tests.algorithms.subgroup_sets.test_vlsd module": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_vlsd"]], "subgroups.tests.core package": [[13, "subgroups-tests-core-package"]], "subgroups.tests.core.test_operator module": [[13, "module-subgroups.tests.core.test_operator"]], "subgroups.tests.core.test_pattern module": [[13, "module-subgroups.tests.core.test_pattern"]], "subgroups.tests.core.test_selector module": [[13, "module-subgroups.tests.core.test_selector"]], "subgroups.tests.core.test_subgroup module": [[13, "module-subgroups.tests.core.test_subgroup"]], "subgroups.tests.data_structures package": [[14, "subgroups-tests-data-structures-package"]], "subgroups.tests.data_structures.test_fp_tree_for_sdmap module": [[14, "module-subgroups.tests.data_structures.test_fp_tree_for_sdmap"]], "subgroups.tests.data_structures.test_fp_tree_node module": [[14, "module-subgroups.tests.data_structures.test_fp_tree_node"]], "subgroups.tests.data_structures.test_subgroup_list module": [[14, "module-subgroups.tests.data_structures.test_subgroup_list"]], "subgroups.tests.data_structures.test_vertical_list_with_bitsets module": [[14, "module-subgroups.tests.data_structures.test_vertical_list_with_bitsets"]], "subgroups.tests.data_structures.test_vertical_list_with_sets module": [[14, "module-subgroups.tests.data_structures.test_vertical_list_with_sets"]], "subgroups.tests.quality_measures package": [[15, "subgroups-tests-quality-measures-package"]], "subgroups.tests.quality_measures.test_quality_measures module": [[15, "module-subgroups.tests.quality_measures.test_quality_measures"]], "subgroups.tests.utils package": [[16, "subgroups-tests-utils-package"]], "subgroups.tests.utils.test_dataframe_filters module": [[16, "module-subgroups.tests.utils.test_dataframe_filters"]], "subgroups.tests.utils.test_file_format_transformations module": [[16, "module-subgroups.tests.utils.test_file_format_transformations"]], "subgroups.utils package": [[17, "subgroups-utils-package"]], "subgroups.utils.dataframe_filters module": [[17, "module-subgroups.utils.dataframe_filters"]], "subgroups.utils.file_format_transformations module": [[17, "module-subgroups.utils.file_format_transformations"]], "subgroups.utils.mdl module": [[17, "module-subgroups.utils.mdl"]]}, "indexentries": {"datasetattributetypeerror": [[1, "subgroups.exceptions.DatasetAttributeTypeError"]], "duplicatefptreenodeerror": [[1, "subgroups.exceptions.DuplicateFpTreeNodeError"]], "inconsistentmethodparameterserror": [[1, "subgroups.exceptions.InconsistentMethodParametersError"]], "operatornotsupportederror": [[1, "subgroups.exceptions.OperatorNotSupportedError"]], "parameternotfounderror": [[1, "subgroups.exceptions.ParameterNotFoundError"]], "subgroupparameternotfounderror": [[1, "subgroups.exceptions.SubgroupParameterNotFoundError"]], "verticallistsizeerror": [[1, "subgroups.exceptions.VerticalListSizeError"]], "module": [[1, "module-subgroups"], [1, "module-subgroups.exceptions"], [2, "module-subgroups.algorithms"], [2, "module-subgroups.algorithms.algorithm"], [3, "module-subgroups.algorithms.subgroup_lists"], [3, "module-subgroups.algorithms.subgroup_lists.dslm"], [3, "module-subgroups.algorithms.subgroup_lists.gmsl"], [3, "module-subgroups.algorithms.subgroup_lists.psld"], [4, "module-subgroups.algorithms.subgroup_sets"], [4, "module-subgroups.algorithms.subgroup_sets.bsd"], [4, "module-subgroups.algorithms.subgroup_sets.cbsd"], [4, "module-subgroups.algorithms.subgroup_sets.cpbsd"], [4, "module-subgroups.algorithms.subgroup_sets.qfinder"], [4, "module-subgroups.algorithms.subgroup_sets.sdmap"], [4, "module-subgroups.algorithms.subgroup_sets.sdmapstar"], [4, "module-subgroups.algorithms.subgroup_sets.vlsd"], [5, "module-subgroups.core"], [5, "module-subgroups.core.operator"], [5, "module-subgroups.core.pattern"], [5, "module-subgroups.core.selector"], [5, "module-subgroups.core.subgroup"], [6, "module-subgroups.data_structures"], [6, "module-subgroups.data_structures.bitset_bsd"], [6, "module-subgroups.data_structures.bitset_qfinder"], [6, "module-subgroups.data_structures.fp_tree_for_sdmap"], [6, "module-subgroups.data_structures.fp_tree_for_sdmapstar"], [6, "module-subgroups.data_structures.fp_tree_node"], [6, "module-subgroups.data_structures.subgroup_list"], [6, "module-subgroups.data_structures.vertical_list"], [6, "module-subgroups.data_structures.vertical_list_with_bitsets"], [6, "module-subgroups.data_structures.vertical_list_with_sets"], [7, "module-subgroups.datasets"], [8, "module-subgroups.quality_measures"], [8, "module-subgroups.quality_measures.absolute_wracc"], [8, "module-subgroups.quality_measures.binomial_test"], [8, "module-subgroups.quality_measures.binomial_test_optimistic_estimate_1"], [8, "module-subgroups.quality_measures.coverage"], [8, "module-subgroups.quality_measures.f1_score"], [8, "module-subgroups.quality_measures.irr"], [8, "module-subgroups.quality_measures.npv"], [8, "module-subgroups.quality_measures.piatetsky_shapiro"], [8, "module-subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1"], [8, "module-subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2"], [8, "module-subgroups.quality_measures.ppv"], [8, "module-subgroups.quality_measures.qg"], [8, "module-subgroups.quality_measures.quality_measure"], [8, "module-subgroups.quality_measures.sensitivity"], [8, "module-subgroups.quality_measures.specificity"], [8, "module-subgroups.quality_measures.support"], [8, "module-subgroups.quality_measures.wracc"], [8, "module-subgroups.quality_measures.wracc_optimistic_estimate_1"], [8, "module-subgroups.quality_measures.youden"], [9, "module-subgroups.tests"], [10, "module-subgroups.tests.algorithms"], [11, "module-subgroups.tests.algorithms.subgroup_lists"], [11, "module-subgroups.tests.algorithms.subgroup_lists.test_dslm"], [11, "module-subgroups.tests.algorithms.subgroup_lists.test_gmsl"], [12, "module-subgroups.tests.algorithms.subgroup_sets"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_bsd"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_cbsd"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_cpbsd"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_qfinder"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_sdmap"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_sdmapstar"], [12, "module-subgroups.tests.algorithms.subgroup_sets.test_vlsd"], [13, "module-subgroups.tests.core"], [13, "module-subgroups.tests.core.test_operator"], [13, "module-subgroups.tests.core.test_pattern"], [13, "module-subgroups.tests.core.test_selector"], [13, "module-subgroups.tests.core.test_subgroup"], [14, "module-subgroups.tests.data_structures"], [14, "module-subgroups.tests.data_structures.test_fp_tree_for_sdmap"], [14, "module-subgroups.tests.data_structures.test_fp_tree_node"], [14, "module-subgroups.tests.data_structures.test_subgroup_list"], [14, "module-subgroups.tests.data_structures.test_vertical_list_with_bitsets"], [14, "module-subgroups.tests.data_structures.test_vertical_list_with_sets"], [15, "module-subgroups.tests.quality_measures"], [15, "module-subgroups.tests.quality_measures.test_quality_measures"], [16, "module-subgroups.tests.utils"], [16, "module-subgroups.tests.utils.test_dataframe_filters"], [16, "module-subgroups.tests.utils.test_file_format_transformations"], [17, "module-subgroups.utils"], [17, "module-subgroups.utils.dataframe_filters"], [17, "module-subgroups.utils.file_format_transformations"], [17, "module-subgroups.utils.mdl"]], "subgroups": [[1, "module-subgroups"]], "subgroups.exceptions": [[1, "module-subgroups.exceptions"]], "algorithm (class in subgroups.algorithms.algorithm)": [[2, "subgroups.algorithms.algorithm.Algorithm"]], "fit() (subgroups.algorithms.algorithm.algorithm method)": [[2, "subgroups.algorithms.algorithm.Algorithm.fit"]], "subgroups.algorithms": [[2, "module-subgroups.algorithms"]], "subgroups.algorithms.algorithm": [[2, "module-subgroups.algorithms.algorithm"]], "dslm (class in subgroups.algorithms.subgroup_lists.dslm)": [[3, "subgroups.algorithms.subgroup_lists.dslm.DSLM"]], "gmsl (class in subgroups.algorithms.subgroup_lists.gmsl)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL"]], "input_line_regex_pattern (subgroups.algorithms.subgroup_lists.gmsl.gmsl attribute)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL.INPUT_LINE_REGEX_PATTERN"]], "psld (class in subgroups.algorithms.subgroup_lists.psld)": [[3, "subgroups.algorithms.subgroup_lists.psld.PSLD"]], "beta (subgroups.algorithms.subgroup_lists.gmsl.gmsl property)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL.beta"]], "fit() (subgroups.algorithms.subgroup_lists.dslm.dslm method)": [[3, "subgroups.algorithms.subgroup_lists.dslm.DSLM.fit"]], "fit() (subgroups.algorithms.subgroup_lists.gmsl.gmsl method)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL.fit"]], "fit() (subgroups.algorithms.subgroup_lists.psld.psld method)": [[3, "subgroups.algorithms.subgroup_lists.psld.PSLD.fit"]], "input_file_path (subgroups.algorithms.subgroup_lists.gmsl.gmsl property)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL.input_file_path"]], "max_sl (subgroups.algorithms.subgroup_lists.gmsl.gmsl property)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL.max_sl"]], "maximum_negative_overlap (subgroups.algorithms.subgroup_lists.dslm.dslm property)": [[3, "subgroups.algorithms.subgroup_lists.dslm.DSLM.maximum_negative_overlap"]], "maximum_positive_overlap (subgroups.algorithms.subgroup_lists.dslm.dslm property)": [[3, "subgroups.algorithms.subgroup_lists.dslm.DSLM.maximum_positive_overlap"]], "output_file_path (subgroups.algorithms.subgroup_lists.gmsl.gmsl property)": [[3, "subgroups.algorithms.subgroup_lists.gmsl.GMSL.output_file_path"]], "sl_max_size (subgroups.algorithms.subgroup_lists.psld.psld property)": [[3, "subgroups.algorithms.subgroup_lists.psld.PSLD.sl_max_size"]], "subgroups.algorithms.subgroup_lists": [[3, "module-subgroups.algorithms.subgroup_lists"]], "subgroups.algorithms.subgroup_lists.dslm": [[3, "module-subgroups.algorithms.subgroup_lists.dslm"]], "subgroups.algorithms.subgroup_lists.gmsl": [[3, "module-subgroups.algorithms.subgroup_lists.gmsl"]], "subgroups.algorithms.subgroup_lists.psld": [[3, "module-subgroups.algorithms.subgroup_lists.psld"]], "bsd (class in subgroups.algorithms.subgroup_sets.bsd)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD"]], "cbsd (class in subgroups.algorithms.subgroup_sets.cbsd)": [[4, "subgroups.algorithms.subgroup_sets.cbsd.CBSD"]], "cpbsd (class in subgroups.algorithms.subgroup_sets.cpbsd)": [[4, "subgroups.algorithms.subgroup_sets.cpbsd.CPBSD"]], "qfinder (class in subgroups.algorithms.subgroup_sets.qfinder)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder"]], "sdmap (class in subgroups.algorithms.subgroup_sets.sdmap)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap"]], "sdmapstar (class in subgroups.algorithms.subgroup_sets.sdmapstar)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar"]], "sort_criterion (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.SORT_CRITERION"]], "sort_criterion_no_order (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.SORT_CRITERION_NO_ORDER"]], "sort_criterion_quality_ascending (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.SORT_CRITERION_QUALITY_ASCENDING"]], "sort_criterion_quality_descending (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.SORT_CRITERION_QUALITY_DESCENDING"]], "vertical_lists_implementation (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.VERTICAL_LISTS_IMPLEMENTATION"]], "vertical_lists_with_bitsets (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.VERTICAL_LISTS_WITH_BITSETS"]], "vertical_lists_with_sets (subgroups.algorithms.subgroup_sets.vlsd.vlsd attribute)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.VERTICAL_LISTS_WITH_SETS"]], "vlsd (class in subgroups.algorithms.subgroup_sets.vlsd)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD"]], "additional_parameters_for_the_optimistic_estimate (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.additional_parameters_for_the_optimistic_estimate"]], "additional_parameters_for_the_quality_measure (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.additional_parameters_for_the_quality_measure"]], "additional_parameters_for_the_quality_measure (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.additional_parameters_for_the_quality_measure"]], "additional_parameters_for_the_quality_measure (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.additional_parameters_for_the_quality_measure"]], "conditional_pruned_branches (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.conditional_pruned_branches"]], "fit() (subgroups.algorithms.subgroup_sets.bsd.bsd method)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.fit"]], "fit() (subgroups.algorithms.subgroup_sets.qfinder.qfinder method)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder.fit"]], "fit() (subgroups.algorithms.subgroup_sets.sdmap.sdmap method)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.fit"]], "fit() (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar method)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.fit"]], "fit() (subgroups.algorithms.subgroup_sets.vlsd.vlsd method)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.fit"]], "k_subgroups (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.k_subgroups"]], "max_depth (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.max_depth"]], "minimum_fp (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.minimum_fp"]], "minimum_fp (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.minimum_fp"]], "minimum_n (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.minimum_n"]], "minimum_n (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.minimum_n"]], "minimum_quality_measure_value (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.minimum_quality_measure_value"]], "minimum_quality_measure_value (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.minimum_quality_measure_value"]], "minimum_support (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.minimum_support"]], "minimum_tp (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.minimum_tp"]], "minimum_tp (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.minimum_tp"]], "num_subgroups (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.num_subgroups"]], "num_subgroups (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.num_subgroups"]], "oe_minimum_threshold (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.oe_minimum_threshold"]], "optimistic_estimate (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.optimistic_estimate"]], "optimistic_estimate (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.optimistic_estimate"]], "pruned_subgroups (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.pruned_subgroups"]], "q_minimum_threshold (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.q_minimum_threshold"]], "quality_measure (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.quality_measure"]], "quality_measure (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.quality_measure"]], "quality_measure (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.quality_measure"]], "quality_measure (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.quality_measure"]], "selected_subgroups (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.selected_subgroups"]], "selected_subgroups (subgroups.algorithms.subgroup_sets.qfinder.qfinder property)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder.selected_subgroups"]], "selected_subgroups (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.selected_subgroups"]], "selected_subgroups (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.selected_subgroups"]], "selected_subgroups (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.selected_subgroups"]], "sort_criterion_in_other_sizes (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.sort_criterion_in_other_sizes"]], "sort_criterion_in_s1 (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.sort_criterion_in_s1"]], "subgroups.algorithms.subgroup_sets": [[4, "module-subgroups.algorithms.subgroup_sets"]], "subgroups.algorithms.subgroup_sets.bsd": [[4, "module-subgroups.algorithms.subgroup_sets.bsd"]], "subgroups.algorithms.subgroup_sets.cbsd": [[4, "module-subgroups.algorithms.subgroup_sets.cbsd"]], "subgroups.algorithms.subgroup_sets.cpbsd": [[4, "module-subgroups.algorithms.subgroup_sets.cpbsd"]], "subgroups.algorithms.subgroup_sets.qfinder": [[4, "module-subgroups.algorithms.subgroup_sets.qfinder"]], "subgroups.algorithms.subgroup_sets.sdmap": [[4, "module-subgroups.algorithms.subgroup_sets.sdmap"]], "subgroups.algorithms.subgroup_sets.sdmapstar": [[4, "module-subgroups.algorithms.subgroup_sets.sdmapstar"]], "subgroups.algorithms.subgroup_sets.vlsd": [[4, "module-subgroups.algorithms.subgroup_sets.vlsd"]], "test_subgroups() (subgroups.algorithms.subgroup_sets.qfinder.qfinder method)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder.test_subgroups"]], "top_patterns (subgroups.algorithms.subgroup_sets.qfinder.qfinder property)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder.top_patterns"]], "unselected_subgroups (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.unselected_subgroups"]], "unselected_subgroups (subgroups.algorithms.subgroup_sets.qfinder.qfinder property)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder.unselected_subgroups"]], "unselected_subgroups (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.unselected_subgroups"]], "unselected_subgroups (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.unselected_subgroups"]], "unselected_subgroups (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.unselected_subgroups"]], "visited_nodes (subgroups.algorithms.subgroup_sets.sdmap.sdmap property)": [[4, "subgroups.algorithms.subgroup_sets.sdmap.SDMap.visited_nodes"]], "visited_nodes (subgroups.algorithms.subgroup_sets.sdmapstar.sdmapstar property)": [[4, "subgroups.algorithms.subgroup_sets.sdmapstar.SDMapStar.visited_nodes"]], "visited_nodes (subgroups.algorithms.subgroup_sets.vlsd.vlsd property)": [[4, "subgroups.algorithms.subgroup_sets.vlsd.VLSD.visited_nodes"]], "visited_subgroups (subgroups.algorithms.subgroup_sets.bsd.bsd property)": [[4, "subgroups.algorithms.subgroup_sets.bsd.BSD.visited_subgroups"]], "visited_subgroups (subgroups.algorithms.subgroup_sets.qfinder.qfinder property)": [[4, "subgroups.algorithms.subgroup_sets.qfinder.QFinder.visited_subgroups"]], "equal (subgroups.core.operator.operator attribute)": [[5, "subgroups.core.operator.Operator.EQUAL"]], "greater (subgroups.core.operator.operator attribute)": [[5, "subgroups.core.operator.Operator.GREATER"]], "greater_or_equal (subgroups.core.operator.operator attribute)": [[5, "subgroups.core.operator.Operator.GREATER_OR_EQUAL"]], "less (subgroups.core.operator.operator attribute)": [[5, "subgroups.core.operator.Operator.LESS"]], "less_or_equal (subgroups.core.operator.operator attribute)": [[5, "subgroups.core.operator.Operator.LESS_OR_EQUAL"]], "not_equal (subgroups.core.operator.operator attribute)": [[5, "subgroups.core.operator.Operator.NOT_EQUAL"]], "operator (class in subgroups.core.operator)": [[5, "subgroups.core.operator.Operator"]], "pattern (class in subgroups.core.pattern)": [[5, "subgroups.core.pattern.Pattern"]], "selector (class in subgroups.core.selector)": [[5, "subgroups.core.selector.Selector"]], "subgroup (class in subgroups.core.subgroup)": [[5, "subgroups.core.subgroup.Subgroup"]], "add_selector() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.add_selector"]], "attribute_name (subgroups.core.selector.selector property)": [[5, "subgroups.core.selector.Selector.attribute_name"]], "copy() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.copy"]], "copy() (subgroups.core.subgroup.subgroup method)": [[5, "subgroups.core.subgroup.Subgroup.copy"]], "description (subgroups.core.subgroup.subgroup property)": [[5, "subgroups.core.subgroup.Subgroup.description"]], "evaluate() (subgroups.core.operator.operator method)": [[5, "subgroups.core.operator.Operator.evaluate"]], "filter() (subgroups.core.subgroup.subgroup method)": [[5, "subgroups.core.subgroup.Subgroup.filter"]], "generate_from_str() (subgroups.core.operator.operator static method)": [[5, "subgroups.core.operator.Operator.generate_from_str"]], "generate_from_str() (subgroups.core.pattern.pattern static method)": [[5, "subgroups.core.pattern.Pattern.generate_from_str"]], "generate_from_str() (subgroups.core.selector.selector static method)": [[5, "subgroups.core.selector.Selector.generate_from_str"]], "generate_from_str() (subgroups.core.subgroup.subgroup static method)": [[5, "subgroups.core.subgroup.Subgroup.generate_from_str"]], "get_selector() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.get_selector"]], "is_contained() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.is_contained"]], "is_refinement() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.is_refinement"]], "is_refinement() (subgroups.core.subgroup.subgroup method)": [[5, "subgroups.core.subgroup.Subgroup.is_refinement"]], "match() (subgroups.core.selector.selector method)": [[5, "subgroups.core.selector.Selector.match"]], "operator (subgroups.core.selector.selector property)": [[5, "subgroups.core.selector.Selector.operator"]], "remove_selector() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.remove_selector"]], "remove_selector_by_index() (subgroups.core.pattern.pattern method)": [[5, "subgroups.core.pattern.Pattern.remove_selector_by_index"]], "subgroups.core": [[5, "module-subgroups.core"]], "subgroups.core.operator": [[5, "module-subgroups.core.operator"]], "subgroups.core.pattern": [[5, "module-subgroups.core.pattern"]], "subgroups.core.selector": [[5, "module-subgroups.core.selector"]], "subgroups.core.subgroup": [[5, "module-subgroups.core.subgroup"]], "target (subgroups.core.subgroup.subgroup property)": [[5, "subgroups.core.subgroup.Subgroup.target"]], "value (subgroups.core.selector.selector property)": [[5, "subgroups.core.selector.Selector.value"]], "bitsetbsd (class in subgroups.data_structures.bitset_bsd)": [[6, "subgroups.data_structures.bitset_bsd.BitsetBSD"]], "bitsetdictionary (class in subgroups.data_structures.bitset_bsd)": [[6, "subgroups.data_structures.bitset_bsd.BitsetDictionary"]], "bitset_qfinder (class in subgroups.data_structures.bitset_qfinder)": [[6, "subgroups.data_structures.bitset_qfinder.Bitset_QFinder"]], "fptreeforsdmap (class in subgroups.data_structures.fp_tree_for_sdmap)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap"]], "fptreeforsdmapstar (class in subgroups.data_structures.fp_tree_for_sdmapstar)": [[6, "subgroups.data_structures.fp_tree_for_sdmapstar.FPTreeForSDMapStar"]], "fptreenode (class in subgroups.data_structures.fp_tree_node)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode"]], "subgrouplist (class in subgroups.data_structures.subgroup_list)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList"]], "verticallist (class in subgroups.data_structures.vertical_list)": [[6, "subgroups.data_structures.vertical_list.VerticalList"]], "verticallistwithbitsets (class in subgroups.data_structures.vertical_list_with_bitsets)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets"]], "verticallistwithsets (class in subgroups.data_structures.vertical_list_with_sets)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets"]], "add_child() (subgroups.data_structures.fp_tree_node.fptreenode method)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.add_child"]], "add_subgroup() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.add_subgroup"]], "bitset_neg (subgroups.data_structures.bitset_bsd.bitsetbsd property)": [[6, "subgroups.data_structures.bitset_bsd.BitsetBSD.bitset_neg"]], "bitset_pos (subgroups.data_structures.bitset_bsd.bitsetbsd property)": [[6, "subgroups.data_structures.bitset_bsd.BitsetBSD.bitset_pos"]], "build_bitset() (subgroups.data_structures.bitset_bsd.bitsetbsd method)": [[6, "subgroups.data_structures.bitset_bsd.BitsetBSD.build_bitset"]], "build_tree() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.build_tree"]], "compute_credibility_measures() (subgroups.data_structures.bitset_qfinder.bitset_qfinder method)": [[6, "subgroups.data_structures.bitset_qfinder.Bitset_QFinder.compute_credibility_measures"]], "compute_quality_value() (subgroups.data_structures.vertical_list.verticallist method)": [[6, "subgroups.data_structures.vertical_list.VerticalList.compute_quality_value"]], "compute_quality_value() (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets method)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.compute_quality_value"]], "compute_quality_value() (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets method)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.compute_quality_value"]], "counters (subgroups.data_structures.fp_tree_node.fptreenode property)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.counters"]], "dataset_number_of_negatives (subgroups.data_structures.subgroup_list.subgrouplist property)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.dataset_number_of_negatives"]], "dataset_number_of_positives (subgroups.data_structures.subgroup_list.subgrouplist property)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.dataset_number_of_positives"]], "dataset_target_distribution (subgroups.data_structures.subgroup_list.subgrouplist property)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.dataset_target_distribution"]], "default_rule_bitarray_of_negatives (subgroups.data_structures.subgroup_list.subgrouplist property)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.default_rule_bitarray_of_negatives"]], "default_rule_bitarray_of_positives (subgroups.data_structures.subgroup_list.subgrouplist property)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.default_rule_bitarray_of_positives"]], "delete_child_by_selector() (subgroups.data_structures.fp_tree_node.fptreenode method)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.delete_child_by_selector"]], "delete_last_subgroup() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.delete_last_subgroup"]], "fp (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.fp"]], "fp (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets property)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.fp"]], "fp (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets property)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.fp"]], "generate_bitset() (subgroups.data_structures.bitset_qfinder.bitset_qfinder method)": [[6, "subgroups.data_structures.bitset_qfinder.Bitset_QFinder.generate_bitset"]], "generate_conditional_fp_tree() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.generate_conditional_fp_tree"]], "generate_conditional_fp_tree_star() (subgroups.data_structures.fp_tree_for_sdmapstar.fptreeforsdmapstar method)": [[6, "subgroups.data_structures.fp_tree_for_sdmapstar.FPTreeForSDMapStar.generate_conditional_fp_tree_star"]], "generate_set_of_frequent_selectors() (subgroups.data_structures.bitset_bsd.bitsetbsd method)": [[6, "subgroups.data_structures.bitset_bsd.BitsetBSD.generate_set_of_frequent_selectors"]], "generate_set_of_frequent_selectors() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.generate_set_of_frequent_selectors"]], "get_child_by_selector() (subgroups.data_structures.fp_tree_node.fptreenode method)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.get_child_by_selector"]], "get_non_empty_patterns() (subgroups.data_structures.bitset_qfinder.bitset_qfinder method)": [[6, "subgroups.data_structures.bitset_qfinder.Bitset_QFinder.get_non_empty_patterns"]], "get_subgroup() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.get_subgroup"]], "get_subgroup_bitarray_of_negatives() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.get_subgroup_bitarray_of_negatives"]], "get_subgroup_bitarray_of_positives() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.get_subgroup_bitarray_of_positives"]], "get_subgroup_original_bitarray_of_negatives() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.get_subgroup_original_bitarray_of_negatives"]], "get_subgroup_original_bitarray_of_positives() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.get_subgroup_original_bitarray_of_positives"]], "has_this_child() (subgroups.data_structures.fp_tree_node.fptreenode method)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.has_this_child"]], "header_table (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap property)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.header_table"]], "header_table_as_str() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.header_table_as_str"]], "is_child_of() (subgroups.data_structures.fp_tree_node.fptreenode method)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.is_child_of"]], "is_empty() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.is_empty"]], "is_empty() (subgroups.data_structures.subgroup_list.subgrouplist method)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.is_empty"]], "join() (subgroups.data_structures.vertical_list.verticallist method)": [[6, "subgroups.data_structures.vertical_list.VerticalList.join"]], "join() (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets method)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.join"]], "join() (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets method)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.join"]], "list_of_selectors (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.list_of_selectors"]], "n (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.n"]], "n (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets property)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.n"]], "n (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets property)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.n"]], "node_link (subgroups.data_structures.fp_tree_node.fptreenode property)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.node_link"]], "number_of_children (subgroups.data_structures.fp_tree_node.fptreenode property)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.number_of_children"]], "number_of_dataset_instances (subgroups.data_structures.subgroup_list.subgrouplist property)": [[6, "subgroups.data_structures.subgroup_list.SubgroupList.number_of_dataset_instances"]], "number_of_dataset_instances (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.number_of_dataset_instances"]], "parent (subgroups.data_structures.fp_tree_node.fptreenode property)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.parent"]], "quality_value (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.quality_value"]], "root_node (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap property)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.root_node"]], "selector (subgroups.data_structures.fp_tree_node.fptreenode property)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.selector"]], "sequence_of_instances_fp (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.sequence_of_instances_fp"]], "sequence_of_instances_fp (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets property)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.sequence_of_instances_fp"]], "sequence_of_instances_fp (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets property)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.sequence_of_instances_fp"]], "sequence_of_instances_tp (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.sequence_of_instances_tp"]], "sequence_of_instances_tp (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets property)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.sequence_of_instances_tp"]], "sequence_of_instances_tp (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets property)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.sequence_of_instances_tp"]], "sorted_header_table (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap property)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.sorted_header_table"]], "subgroups.data_structures": [[6, "module-subgroups.data_structures"]], "subgroups.data_structures.bitset_bsd": [[6, "module-subgroups.data_structures.bitset_bsd"]], "subgroups.data_structures.bitset_qfinder": [[6, "module-subgroups.data_structures.bitset_qfinder"]], "subgroups.data_structures.fp_tree_for_sdmap": [[6, "module-subgroups.data_structures.fp_tree_for_sdmap"]], "subgroups.data_structures.fp_tree_for_sdmapstar": [[6, "module-subgroups.data_structures.fp_tree_for_sdmapstar"]], "subgroups.data_structures.fp_tree_node": [[6, "module-subgroups.data_structures.fp_tree_node"]], "subgroups.data_structures.subgroup_list": [[6, "module-subgroups.data_structures.subgroup_list"]], "subgroups.data_structures.vertical_list": [[6, "module-subgroups.data_structures.vertical_list"]], "subgroups.data_structures.vertical_list_with_bitsets": [[6, "module-subgroups.data_structures.vertical_list_with_bitsets"]], "subgroups.data_structures.vertical_list_with_sets": [[6, "module-subgroups.data_structures.vertical_list_with_sets"]], "there_is_a_single_path() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.there_is_a_single_path"]], "tp (subgroups.data_structures.vertical_list.verticallist property)": [[6, "subgroups.data_structures.vertical_list.VerticalList.tp"]], "tp (subgroups.data_structures.vertical_list_with_bitsets.verticallistwithbitsets property)": [[6, "subgroups.data_structures.vertical_list_with_bitsets.VerticalListWithBitsets.tp"]], "tp (subgroups.data_structures.vertical_list_with_sets.verticallistwithsets property)": [[6, "subgroups.data_structures.vertical_list_with_sets.VerticalListWithSets.tp"]], "tree_as_str() (subgroups.data_structures.fp_tree_for_sdmap.fptreeforsdmap method)": [[6, "subgroups.data_structures.fp_tree_for_sdmap.FPTreeForSDMap.tree_as_str"]], "tree_as_str() (subgroups.data_structures.fp_tree_node.fptreenode method)": [[6, "subgroups.data_structures.fp_tree_node.FPTreeNode.tree_as_str"]], "load_ballons_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_ballons_csv"]], "load_car_evaluation_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_car_evaluation_csv"]], "load_covid_sp_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_covid_sp_csv"]], "load_credit_g_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_credit_g_csv"]], "load_heart_disease_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_heart_disease_csv"]], "load_income_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_income_csv"]], "load_lenses_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_lenses_csv"]], "load_lymph_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_lymph_csv"]], "load_mushroom_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_mushroom_csv"]], "load_shop_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_shop_csv"]], "load_sick_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_sick_csv"]], "load_tic_tac_toe_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_tic_tac_toe_csv"]], "load_vote_csv() (in module subgroups.datasets)": [[7, "subgroups.datasets.load_vote_csv"]], "subgroups.datasets": [[7, "module-subgroups.datasets"]], "absolutewracc (class in subgroups.quality_measures.absolute_wracc)": [[8, "subgroups.quality_measures.absolute_wracc.AbsoluteWRAcc"]], "binomialtest (class in subgroups.quality_measures.binomial_test)": [[8, "subgroups.quality_measures.binomial_test.BinomialTest"]], "binomialtestoptimisticestimate1 (class in subgroups.quality_measures.binomial_test_optimistic_estimate_1)": [[8, "subgroups.quality_measures.binomial_test_optimistic_estimate_1.BinomialTestOptimisticEstimate1"]], "coverage (class in subgroups.quality_measures.coverage)": [[8, "subgroups.quality_measures.coverage.Coverage"]], "f1score (class in subgroups.quality_measures.f1_score)": [[8, "subgroups.quality_measures.f1_score.F1Score"]], "false_population (subgroups.quality_measures.quality_measure.qualitymeasure attribute)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.FALSE_POPULATION"]], "false_positives (subgroups.quality_measures.quality_measure.qualitymeasure attribute)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.FALSE_POSITIVES"]], "irr (class in subgroups.quality_measures.irr)": [[8, "subgroups.quality_measures.irr.IRR"]], "npv (class in subgroups.quality_measures.npv)": [[8, "subgroups.quality_measures.npv.NPV"]], "ppv (class in subgroups.quality_measures.ppv)": [[8, "subgroups.quality_measures.ppv.PPV"]], "piatetskyshapiro (class in subgroups.quality_measures.piatetsky_shapiro)": [[8, "subgroups.quality_measures.piatetsky_shapiro.PiatetskyShapiro"]], "piatetskyshapirooptimisticestimate1 (class in subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.PiatetskyShapiroOptimisticEstimate1"]], "piatetskyshapirooptimisticestimate2 (class in subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.PiatetskyShapiroOptimisticEstimate2"]], "qg (class in subgroups.quality_measures.qg)": [[8, "subgroups.quality_measures.qg.Qg"]], "qualitymeasure (class in subgroups.quality_measures.quality_measure)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure"]], "sensitivity (class in subgroups.quality_measures.sensitivity)": [[8, "subgroups.quality_measures.sensitivity.Sensitivity"]], "specificity (class in subgroups.quality_measures.specificity)": [[8, "subgroups.quality_measures.specificity.Specificity"]], "support (class in subgroups.quality_measures.support)": [[8, "subgroups.quality_measures.support.Support"]], "true_population (subgroups.quality_measures.quality_measure.qualitymeasure attribute)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.TRUE_POPULATION"]], "true_positives (subgroups.quality_measures.quality_measure.qualitymeasure attribute)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.TRUE_POSITIVES"]], "wracc (class in subgroups.quality_measures.wracc)": [[8, "subgroups.quality_measures.wracc.WRAcc"]], "wraccoptimisticestimate1 (class in subgroups.quality_measures.wracc_optimistic_estimate_1)": [[8, "subgroups.quality_measures.wracc_optimistic_estimate_1.WRAccOptimisticEstimate1"]], "youden (class in subgroups.quality_measures.youden)": [[8, "subgroups.quality_measures.youden.Youden"]], "compute() (subgroups.quality_measures.absolute_wracc.absolutewracc method)": [[8, "subgroups.quality_measures.absolute_wracc.AbsoluteWRAcc.compute"]], "compute() (subgroups.quality_measures.binomial_test.binomialtest method)": [[8, "subgroups.quality_measures.binomial_test.BinomialTest.compute"]], "compute() (subgroups.quality_measures.binomial_test_optimistic_estimate_1.binomialtestoptimisticestimate1 method)": [[8, "subgroups.quality_measures.binomial_test_optimistic_estimate_1.BinomialTestOptimisticEstimate1.compute"]], "compute() (subgroups.quality_measures.coverage.coverage method)": [[8, "subgroups.quality_measures.coverage.Coverage.compute"]], "compute() (subgroups.quality_measures.f1_score.f1score method)": [[8, "subgroups.quality_measures.f1_score.F1Score.compute"]], "compute() (subgroups.quality_measures.irr.irr method)": [[8, "subgroups.quality_measures.irr.IRR.compute"]], "compute() (subgroups.quality_measures.npv.npv method)": [[8, "subgroups.quality_measures.npv.NPV.compute"]], "compute() (subgroups.quality_measures.piatetsky_shapiro.piatetskyshapiro method)": [[8, "subgroups.quality_measures.piatetsky_shapiro.PiatetskyShapiro.compute"]], "compute() (subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.piatetskyshapirooptimisticestimate1 method)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.PiatetskyShapiroOptimisticEstimate1.compute"]], "compute() (subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.piatetskyshapirooptimisticestimate2 method)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.PiatetskyShapiroOptimisticEstimate2.compute"]], "compute() (subgroups.quality_measures.ppv.ppv method)": [[8, "subgroups.quality_measures.ppv.PPV.compute"]], "compute() (subgroups.quality_measures.qg.qg method)": [[8, "subgroups.quality_measures.qg.Qg.compute"]], "compute() (subgroups.quality_measures.quality_measure.qualitymeasure method)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.compute"]], "compute() (subgroups.quality_measures.sensitivity.sensitivity method)": [[8, "subgroups.quality_measures.sensitivity.Sensitivity.compute"]], "compute() (subgroups.quality_measures.specificity.specificity method)": [[8, "subgroups.quality_measures.specificity.Specificity.compute"]], "compute() (subgroups.quality_measures.support.support method)": [[8, "subgroups.quality_measures.support.Support.compute"]], "compute() (subgroups.quality_measures.wracc.wracc method)": [[8, "subgroups.quality_measures.wracc.WRAcc.compute"]], "compute() (subgroups.quality_measures.wracc_optimistic_estimate_1.wraccoptimisticestimate1 method)": [[8, "subgroups.quality_measures.wracc_optimistic_estimate_1.WRAccOptimisticEstimate1.compute"]], "compute() (subgroups.quality_measures.youden.youden method)": [[8, "subgroups.quality_measures.youden.Youden.compute"]], "get_name() (subgroups.quality_measures.absolute_wracc.absolutewracc method)": [[8, "subgroups.quality_measures.absolute_wracc.AbsoluteWRAcc.get_name"]], "get_name() (subgroups.quality_measures.binomial_test.binomialtest method)": [[8, "subgroups.quality_measures.binomial_test.BinomialTest.get_name"]], "get_name() (subgroups.quality_measures.binomial_test_optimistic_estimate_1.binomialtestoptimisticestimate1 method)": [[8, "subgroups.quality_measures.binomial_test_optimistic_estimate_1.BinomialTestOptimisticEstimate1.get_name"]], "get_name() (subgroups.quality_measures.coverage.coverage method)": [[8, "subgroups.quality_measures.coverage.Coverage.get_name"]], "get_name() (subgroups.quality_measures.f1_score.f1score method)": [[8, "subgroups.quality_measures.f1_score.F1Score.get_name"]], "get_name() (subgroups.quality_measures.irr.irr method)": [[8, "subgroups.quality_measures.irr.IRR.get_name"]], "get_name() (subgroups.quality_measures.npv.npv method)": [[8, "subgroups.quality_measures.npv.NPV.get_name"]], "get_name() (subgroups.quality_measures.piatetsky_shapiro.piatetskyshapiro method)": [[8, "subgroups.quality_measures.piatetsky_shapiro.PiatetskyShapiro.get_name"]], "get_name() (subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.piatetskyshapirooptimisticestimate1 method)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.PiatetskyShapiroOptimisticEstimate1.get_name"]], "get_name() (subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.piatetskyshapirooptimisticestimate2 method)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.PiatetskyShapiroOptimisticEstimate2.get_name"]], "get_name() (subgroups.quality_measures.ppv.ppv method)": [[8, "subgroups.quality_measures.ppv.PPV.get_name"]], "get_name() (subgroups.quality_measures.qg.qg method)": [[8, "subgroups.quality_measures.qg.Qg.get_name"]], "get_name() (subgroups.quality_measures.quality_measure.qualitymeasure method)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.get_name"]], "get_name() (subgroups.quality_measures.sensitivity.sensitivity method)": [[8, "subgroups.quality_measures.sensitivity.Sensitivity.get_name"]], "get_name() (subgroups.quality_measures.specificity.specificity method)": [[8, "subgroups.quality_measures.specificity.Specificity.get_name"]], "get_name() (subgroups.quality_measures.support.support method)": [[8, "subgroups.quality_measures.support.Support.get_name"]], "get_name() (subgroups.quality_measures.wracc.wracc method)": [[8, "subgroups.quality_measures.wracc.WRAcc.get_name"]], "get_name() (subgroups.quality_measures.wracc_optimistic_estimate_1.wraccoptimisticestimate1 method)": [[8, "subgroups.quality_measures.wracc_optimistic_estimate_1.WRAccOptimisticEstimate1.get_name"]], "get_name() (subgroups.quality_measures.youden.youden method)": [[8, "subgroups.quality_measures.youden.Youden.get_name"]], "optimistic_estimate_of() (subgroups.quality_measures.absolute_wracc.absolutewracc method)": [[8, "subgroups.quality_measures.absolute_wracc.AbsoluteWRAcc.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.binomial_test.binomialtest method)": [[8, "subgroups.quality_measures.binomial_test.BinomialTest.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.binomial_test_optimistic_estimate_1.binomialtestoptimisticestimate1 method)": [[8, "subgroups.quality_measures.binomial_test_optimistic_estimate_1.BinomialTestOptimisticEstimate1.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.coverage.coverage method)": [[8, "subgroups.quality_measures.coverage.Coverage.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.f1_score.f1score method)": [[8, "subgroups.quality_measures.f1_score.F1Score.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.irr.irr method)": [[8, "subgroups.quality_measures.irr.IRR.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.npv.npv method)": [[8, "subgroups.quality_measures.npv.NPV.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.piatetsky_shapiro.piatetskyshapiro method)": [[8, "subgroups.quality_measures.piatetsky_shapiro.PiatetskyShapiro.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.piatetskyshapirooptimisticestimate1 method)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1.PiatetskyShapiroOptimisticEstimate1.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.piatetskyshapirooptimisticestimate2 method)": [[8, "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2.PiatetskyShapiroOptimisticEstimate2.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.ppv.ppv method)": [[8, "subgroups.quality_measures.ppv.PPV.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.qg.qg method)": [[8, "subgroups.quality_measures.qg.Qg.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.quality_measure.qualitymeasure method)": [[8, "subgroups.quality_measures.quality_measure.QualityMeasure.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.sensitivity.sensitivity method)": [[8, "subgroups.quality_measures.sensitivity.Sensitivity.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.specificity.specificity method)": [[8, "subgroups.quality_measures.specificity.Specificity.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.support.support method)": [[8, "subgroups.quality_measures.support.Support.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.wracc.wracc method)": [[8, "subgroups.quality_measures.wracc.WRAcc.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.wracc_optimistic_estimate_1.wraccoptimisticestimate1 method)": [[8, "subgroups.quality_measures.wracc_optimistic_estimate_1.WRAccOptimisticEstimate1.optimistic_estimate_of"]], "optimistic_estimate_of() (subgroups.quality_measures.youden.youden method)": [[8, "subgroups.quality_measures.youden.Youden.optimistic_estimate_of"]], "subgroups.quality_measures": [[8, "module-subgroups.quality_measures"]], "subgroups.quality_measures.absolute_wracc": [[8, "module-subgroups.quality_measures.absolute_wracc"]], "subgroups.quality_measures.binomial_test": [[8, "module-subgroups.quality_measures.binomial_test"]], "subgroups.quality_measures.binomial_test_optimistic_estimate_1": [[8, "module-subgroups.quality_measures.binomial_test_optimistic_estimate_1"]], "subgroups.quality_measures.coverage": [[8, "module-subgroups.quality_measures.coverage"]], "subgroups.quality_measures.f1_score": [[8, "module-subgroups.quality_measures.f1_score"]], "subgroups.quality_measures.irr": [[8, "module-subgroups.quality_measures.irr"]], "subgroups.quality_measures.npv": [[8, "module-subgroups.quality_measures.npv"]], "subgroups.quality_measures.piatetsky_shapiro": [[8, "module-subgroups.quality_measures.piatetsky_shapiro"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1": [[8, "module-subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_1"]], "subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2": [[8, "module-subgroups.quality_measures.piatetsky_shapiro_optimistic_estimate_2"]], "subgroups.quality_measures.ppv": [[8, "module-subgroups.quality_measures.ppv"]], "subgroups.quality_measures.qg": [[8, "module-subgroups.quality_measures.qg"]], "subgroups.quality_measures.quality_measure": [[8, "module-subgroups.quality_measures.quality_measure"]], "subgroups.quality_measures.sensitivity": [[8, "module-subgroups.quality_measures.sensitivity"]], "subgroups.quality_measures.specificity": [[8, "module-subgroups.quality_measures.specificity"]], "subgroups.quality_measures.support": [[8, "module-subgroups.quality_measures.support"]], "subgroups.quality_measures.wracc": [[8, "module-subgroups.quality_measures.wracc"]], "subgroups.quality_measures.wracc_optimistic_estimate_1": [[8, "module-subgroups.quality_measures.wracc_optimistic_estimate_1"]], "subgroups.quality_measures.youden": [[8, "module-subgroups.quality_measures.youden"]], "run_all_tests() (in module subgroups.tests)": [[9, "subgroups.tests.run_all_tests"]], "subgroups.tests": [[9, "module-subgroups.tests"]], "subgroups.tests.algorithms": [[10, "module-subgroups.tests.algorithms"]], "testdslm (class in subgroups.tests.algorithms.subgroup_lists.test_dslm)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM"]], "testgmsl (class in subgroups.tests.algorithms.subgroup_lists.test_gmsl)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL"]], "subgroups.tests.algorithms.subgroup_lists": [[11, "module-subgroups.tests.algorithms.subgroup_lists"]], "subgroups.tests.algorithms.subgroup_lists.test_dslm": [[11, "module-subgroups.tests.algorithms.subgroup_lists.test_dslm"]], "subgroups.tests.algorithms.subgroup_lists.test_gmsl": [[11, "module-subgroups.tests.algorithms.subgroup_lists.test_gmsl"]], "test_dslm_compute_overlap_factor_function_1() (subgroups.tests.algorithms.subgroup_lists.test_dslm.testdslm method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM.test_DSLM_compute_overlap_factor_function_1"]], "test_dslm_compute_overlap_factor_function_2() (subgroups.tests.algorithms.subgroup_lists.test_dslm.testdslm method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM.test_DSLM_compute_overlap_factor_function_2"]], "test_dslm_compute_overlap_factor_function_3() (subgroups.tests.algorithms.subgroup_lists.test_dslm.testdslm method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM.test_DSLM_compute_overlap_factor_function_3"]], "test_dslm_counter_of_subgroups_1() (subgroups.tests.algorithms.subgroup_lists.test_dslm.testdslm method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM.test_DSLM_counter_of_subgroups_1"]], "test_dslm_counter_of_subgroups_2() (subgroups.tests.algorithms.subgroup_lists.test_dslm.testdslm method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_dslm.TestDSLM.test_DSLM_counter_of_subgroups_2"]], "test_gmsl_fit_method_1() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_fit_method_1"]], "test_gmsl_load_candidates_method_1() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_load_candidates_method_1"]], "test_gmsl_load_candidates_method_2() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_load_candidates_method_2"]], "test_gmsl_load_candidates_method_3() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_load_candidates_method_3"]], "test_gmsl_load_candidates_method_4() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_load_candidates_method_4"]], "test_gmsl_load_candidates_method_5() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_load_candidates_method_5"]], "test_gmsl_mdl_functions_1() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_mdl_functions_1"]], "test_gmsl_mdl_functions_2() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_mdl_functions_2"]], "test_gmsl_mdl_functions_3() (subgroups.tests.algorithms.subgroup_lists.test_gmsl.testgmsl method)": [[11, "subgroups.tests.algorithms.subgroup_lists.test_gmsl.TestGMSL.test_GMSL_mdl_functions_3"]], "testbsd (class in subgroups.tests.algorithms.subgroup_sets.test_bsd)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD"]], "testcbsd (class in subgroups.tests.algorithms.subgroup_sets.test_cbsd)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD"]], "testcpbsd (class in subgroups.tests.algorithms.subgroup_sets.test_cpbsd)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD"]], "testqfinder (class in subgroups.tests.algorithms.subgroup_sets.test_qfinder)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder"]], "testsdmap (class in subgroups.tests.algorithms.subgroup_sets.test_sdmap)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap"]], "testsdmapstar (class in subgroups.tests.algorithms.subgroup_sets.test_sdmapstar)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar"]], "testvlsd (class in subgroups.tests.algorithms.subgroup_sets.test_vlsd)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD"]], "subgroups.tests.algorithms.subgroup_sets": [[12, "module-subgroups.tests.algorithms.subgroup_sets"]], "subgroups.tests.algorithms.subgroup_sets.test_bsd": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_bsd"]], "subgroups.tests.algorithms.subgroup_sets.test_cbsd": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_cbsd"]], "subgroups.tests.algorithms.subgroup_sets.test_cpbsd": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_cpbsd"]], "subgroups.tests.algorithms.subgroup_sets.test_qfinder": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_qfinder"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmap": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_sdmap"]], "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_sdmapstar"]], "subgroups.tests.algorithms.subgroup_sets.test_vlsd": [[12, "module-subgroups.tests.algorithms.subgroup_sets.test_vlsd"]], "test_bsd_cardinality() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_cardinality"]], "test_bsd_checkrel() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_checkRel"]], "test_bsd_checkrelevancies() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_checkRelevancies"]], "test_bsd_fit1() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_fit1"]], "test_bsd_fit2() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_fit2"]], "test_bsd_fit3() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_fit3"]], "test_bsd_fit4() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_fit4"]], "test_bsd_init_method() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_init_method"]], "test_bsd_logicaland() (subgroups.tests.algorithms.subgroup_sets.test_bsd.testbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_bsd.TestBSD.test_BSD_logicalAnd"]], "test_cbsd_checkrel() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_checkRel"]], "test_cbsd_checkrelevancies() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_checkRelevancies"]], "test_cbsd_fit1() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_fit1"]], "test_cbsd_fit2() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_fit2"]], "test_cbsd_fit3() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_fit3"]], "test_cbsd_fit4() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_fit4"]], "test_cbsd_init_method() (subgroups.tests.algorithms.subgroup_sets.test_cbsd.testcbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cbsd.TestCBSD.test_CBSD_init_method"]], "test_cpbsd_checkrel() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_checkRel"]], "test_cpbsd_checkrelevancies() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_checkRelevancies"]], "test_cpbsd_fit1() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_fit1"]], "test_cpbsd_fit2() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_fit2"]], "test_cpbsd_fit3() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_fit3"]], "test_cpbsd_fit4() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_fit4"]], "test_cpbsd_init_method() (subgroups.tests.algorithms.subgroup_sets.test_cpbsd.testcpbsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_cpbsd.TestCPBSD.test_CPBSD_init_method"]], "test_qfinder_fit() (subgroups.tests.algorithms.subgroup_sets.test_qfinder.testqfinder method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder.test_QFinder_fit"]], "test_qfinder_generate_candidate_patterns1() (subgroups.tests.algorithms.subgroup_sets.test_qfinder.testqfinder method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder.test_QFinder_generate_candidate_patterns1"]], "test_qfinder_generate_candidate_patterns2() (subgroups.tests.algorithms.subgroup_sets.test_qfinder.testqfinder method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder.test_QFinder_generate_candidate_patterns2"]], "test_qfinder_handle_individual_result() (subgroups.tests.algorithms.subgroup_sets.test_qfinder.testqfinder method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder.test_QFinder_handle_individual_result"]], "test_qfinder_init_method1() (subgroups.tests.algorithms.subgroup_sets.test_qfinder.testqfinder method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder.test_QFinder_init_method1"]], "test_qfinder_init_method2() (subgroups.tests.algorithms.subgroup_sets.test_qfinder.testqfinder method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_qfinder.TestQFinder.test_QFinder_init_method2"]], "test_sdmapstar_additional_parameters_in_fit_method() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_additional_parameters_in_fit_method"]], "test_sdmapstar_fit_method_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_1"]], "test_sdmapstar_fit_method_10() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_10"]], "test_sdmapstar_fit_method_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_2"]], "test_sdmapstar_fit_method_3() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_3"]], "test_sdmapstar_fit_method_4() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_4"]], "test_sdmapstar_fit_method_5() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_5"]], "test_sdmapstar_fit_method_6() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_6"]], "test_sdmapstar_fit_method_7() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_7"]], "test_sdmapstar_fit_method_8() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_8"]], "test_sdmapstar_fit_method_9() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fit_method_9"]], "test_sdmapstar_fpgrowth_method_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fpgrowth_method_1"]], "test_sdmapstar_fpgrowth_method_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fpgrowth_method_2"]], "test_sdmapstar_fpgrowth_method_3() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fpgrowth_method_3"]], "test_sdmapstar_fpgrowth_method_4() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_fpgrowth_method_4"]], "test_sdmapstar_init_method_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_init_method_1"]], "test_sdmapstar_init_method_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_init_method_2"]], "test_sdmapstar_unselected_and_selected_subgroups_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_unselected_and_selected_subgroups_1"]], "test_sdmapstar_unselected_and_selected_subgroups_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.testsdmapstar method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmapstar.TestSDMapStar.test_SDMapStar_unselected_and_selected_subgroups_2"]], "test_sdmap_additional_parameters_in_fit_method() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_additional_parameters_in_fit_method"]], "test_sdmap_fit_method_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_1"]], "test_sdmap_fit_method_10() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_10"]], "test_sdmap_fit_method_11() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_11"]], "test_sdmap_fit_method_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_2"]], "test_sdmap_fit_method_3() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_3"]], "test_sdmap_fit_method_4() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_4"]], "test_sdmap_fit_method_5() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_5"]], "test_sdmap_fit_method_6() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_6"]], "test_sdmap_fit_method_7() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_7"]], "test_sdmap_fit_method_8() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_8"]], "test_sdmap_fit_method_9() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fit_method_9"]], "test_sdmap_fpgrowth_method_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fpgrowth_method_1"]], "test_sdmap_fpgrowth_method_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fpgrowth_method_2"]], "test_sdmap_fpgrowth_method_3() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fpgrowth_method_3"]], "test_sdmap_fpgrowth_method_4() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_fpgrowth_method_4"]], "test_sdmap_init_method_1() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_init_method_1"]], "test_sdmap_init_method_2() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_init_method_2"]], "test_sdmap_unselected_and_selected_subgroups() (subgroups.tests.algorithms.subgroup_sets.test_sdmap.testsdmap method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_sdmap.TestSDMap.test_SDMap_unselected_and_selected_subgroups"]], "test_vlsd_additional_parameters_in_fit_method() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_additional_parameters_in_fit_method"]], "test_vlsd_fit_method_1() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_1"]], "test_vlsd_fit_method_2() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_2"]], "test_vlsd_fit_method_3() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_3"]], "test_vlsd_fit_method_4() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_4"]], "test_vlsd_fit_method_5() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_5"]], "test_vlsd_fit_method_6() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_6"]], "test_vlsd_fit_method_7() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_fit_method_7"]], "test_vlsd_init_method_1() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_init_method_1"]], "test_vlsd_init_method_2() (subgroups.tests.algorithms.subgroup_sets.test_vlsd.testvlsd method)": [[12, "subgroups.tests.algorithms.subgroup_sets.test_vlsd.TestVLSD.test_VLSD_init_method_2"]], "testoperator (class in subgroups.tests.core.test_operator)": [[13, "subgroups.tests.core.test_operator.TestOperator"]], "testpattern (class in subgroups.tests.core.test_pattern)": [[13, "subgroups.tests.core.test_pattern.TestPattern"]], "testselector (class in subgroups.tests.core.test_selector)": [[13, "subgroups.tests.core.test_selector.TestSelector"]], "testsubgroup (class in subgroups.tests.core.test_subgroup)": [[13, "subgroups.tests.core.test_subgroup.TestSubgroup"]], "setup() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.setUp"]], "subgroups.tests.core": [[13, "module-subgroups.tests.core"]], "subgroups.tests.core.test_operator": [[13, "module-subgroups.tests.core.test_operator"]], "subgroups.tests.core.test_pattern": [[13, "module-subgroups.tests.core.test_pattern"]], "subgroups.tests.core.test_selector": [[13, "module-subgroups.tests.core.test_selector"]], "subgroups.tests.core.test_subgroup": [[13, "module-subgroups.tests.core.test_subgroup"]], "test_operator_evaluate_method() (subgroups.tests.core.test_operator.testoperator method)": [[13, "subgroups.tests.core.test_operator.TestOperator.test_Operator_evaluate_method"]], "test_operator_evaluate_method_with_pandasseries() (subgroups.tests.core.test_operator.testoperator method)": [[13, "subgroups.tests.core.test_operator.TestOperator.test_Operator_evaluate_method_with_pandasSeries"]], "test_operator_generate_from_str_method() (subgroups.tests.core.test_operator.testoperator method)": [[13, "subgroups.tests.core.test_operator.TestOperator.test_Operator_generate_from_str_method"]], "test_operator_string_representation() (subgroups.tests.core.test_operator.testoperator method)": [[13, "subgroups.tests.core.test_operator.TestOperator.test_Operator_string_representation"]], "test_pattern_contains_method() (subgroups.tests.core.test_pattern.testpattern method)": [[13, "subgroups.tests.core.test_pattern.TestPattern.test_Pattern_contains_method"]], "test_pattern_general() (subgroups.tests.core.test_pattern.testpattern method)": [[13, "subgroups.tests.core.test_pattern.TestPattern.test_Pattern_general"]], "test_pattern_is_contained_method() (subgroups.tests.core.test_pattern.testpattern method)": [[13, "subgroups.tests.core.test_pattern.TestPattern.test_Pattern_is_contained_method"]], "test_pattern_is_refinement_method() (subgroups.tests.core.test_pattern.testpattern method)": [[13, "subgroups.tests.core.test_pattern.TestPattern.test_Pattern_is_refinement_method"]], "test_selector_attributes() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_attributes"]], "test_selector_comparisons() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_comparisons"]], "test_selector_creation_process() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_creation_process"]], "test_selector_deletion_process() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_deletion_process"]], "test_selector_generate_from_str_method() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_generate_from_str_method"]], "test_selector_match_method() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_match_method"]], "test_selector_same_value_different_type() (subgroups.tests.core.test_selector.testselector method)": [[13, "subgroups.tests.core.test_selector.TestSelector.test_Selector_same_value_different_type"]], "test_subgroup_filter() (subgroups.tests.core.test_subgroup.testsubgroup method)": [[13, "subgroups.tests.core.test_subgroup.TestSubgroup.test_Subgroup_filter"]], "test_subgroup_general() (subgroups.tests.core.test_subgroup.testsubgroup method)": [[13, "subgroups.tests.core.test_subgroup.TestSubgroup.test_Subgroup_general"]], "test_subgroup_is_refinement_method() (subgroups.tests.core.test_subgroup.testsubgroup method)": [[13, "subgroups.tests.core.test_subgroup.TestSubgroup.test_Subgroup_is_refinement_method"]], "testfptreeforsdmap (class in subgroups.tests.data_structures.test_fp_tree_for_sdmap)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap"]], "testfptreenode (class in subgroups.tests.data_structures.test_fp_tree_node)": [[14, "subgroups.tests.data_structures.test_fp_tree_node.TestFPTreeNode"]], "testsubgrouplist (class in subgroups.tests.data_structures.test_subgroup_list)": [[14, "subgroups.tests.data_structures.test_subgroup_list.TestSubgroupList"]], "testverticallistwithbitsets (class in subgroups.tests.data_structures.test_vertical_list_with_bitsets)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_bitsets.TestVerticalListWithBitsets"]], "testverticallistwithsets (class in subgroups.tests.data_structures.test_vertical_list_with_sets)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_sets.TestVerticalListWithSets"]], "subgroups.tests.data_structures": [[14, "module-subgroups.tests.data_structures"]], "subgroups.tests.data_structures.test_fp_tree_for_sdmap": [[14, "module-subgroups.tests.data_structures.test_fp_tree_for_sdmap"]], "subgroups.tests.data_structures.test_fp_tree_node": [[14, "module-subgroups.tests.data_structures.test_fp_tree_node"]], "subgroups.tests.data_structures.test_subgroup_list": [[14, "module-subgroups.tests.data_structures.test_subgroup_list"]], "subgroups.tests.data_structures.test_vertical_list_with_bitsets": [[14, "module-subgroups.tests.data_structures.test_vertical_list_with_bitsets"]], "subgroups.tests.data_structures.test_vertical_list_with_sets": [[14, "module-subgroups.tests.data_structures.test_vertical_list_with_sets"]], "test_fptreeforsdmap_build_tree_1() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_build_tree_1"]], "test_fptreeforsdmap_build_tree_2() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_build_tree_2"]], "test_fptreeforsdmap_build_tree_3() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_build_tree_3"]], "test_fptreeforsdmap_build_tree_4() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_build_tree_4"]], "test_fptreeforsdmap_generate_conditional_fp_tree_1() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_generate_conditional_fp_tree_1"]], "test_fptreeforsdmap_generate_conditional_fp_tree_2() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_generate_conditional_fp_tree_2"]], "test_fptreeforsdmap_generate_set_of_frequent_selectors_1() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_generate_set_of_frequent_selectors_1"]], "test_fptreeforsdmap_generate_set_of_frequent_selectors_2() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_generate_set_of_frequent_selectors_2"]], "test_fptreeforsdmap_generate_set_of_frequent_selectors_3() (subgroups.tests.data_structures.test_fp_tree_for_sdmap.testfptreeforsdmap method)": [[14, "subgroups.tests.data_structures.test_fp_tree_for_sdmap.TestFPTreeForSDMap.test_FPTreeForSDMap_generate_set_of_frequent_selectors_3"]], "test_fptreenode_general() (subgroups.tests.data_structures.test_fp_tree_node.testfptreenode method)": [[14, "subgroups.tests.data_structures.test_fp_tree_node.TestFPTreeNode.test_FPTreeNode_general"]], "test_subgroup_list_1() (subgroups.tests.data_structures.test_subgroup_list.testsubgrouplist method)": [[14, "subgroups.tests.data_structures.test_subgroup_list.TestSubgroupList.test_subgroup_list_1"]], "test_subgroup_list_2() (subgroups.tests.data_structures.test_subgroup_list.testsubgrouplist method)": [[14, "subgroups.tests.data_structures.test_subgroup_list.TestSubgroupList.test_subgroup_list_2"]], "test_subgroup_list_3() (subgroups.tests.data_structures.test_subgroup_list.testsubgrouplist method)": [[14, "subgroups.tests.data_structures.test_subgroup_list.TestSubgroupList.test_subgroup_list_3"]], "test_subgroup_list_4() (subgroups.tests.data_structures.test_subgroup_list.testsubgrouplist method)": [[14, "subgroups.tests.data_structures.test_subgroup_list.TestSubgroupList.test_subgroup_list_4"]], "test_vertical_list_1() (subgroups.tests.data_structures.test_vertical_list_with_bitsets.testverticallistwithbitsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_bitsets.TestVerticalListWithBitsets.test_vertical_list_1"]], "test_vertical_list_1() (subgroups.tests.data_structures.test_vertical_list_with_sets.testverticallistwithsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_sets.TestVerticalListWithSets.test_vertical_list_1"]], "test_vertical_list_2() (subgroups.tests.data_structures.test_vertical_list_with_bitsets.testverticallistwithbitsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_bitsets.TestVerticalListWithBitsets.test_vertical_list_2"]], "test_vertical_list_2() (subgroups.tests.data_structures.test_vertical_list_with_sets.testverticallistwithsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_sets.TestVerticalListWithSets.test_vertical_list_2"]], "test_vertical_list_3() (subgroups.tests.data_structures.test_vertical_list_with_bitsets.testverticallistwithbitsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_bitsets.TestVerticalListWithBitsets.test_vertical_list_3"]], "test_vertical_list_3() (subgroups.tests.data_structures.test_vertical_list_with_sets.testverticallistwithsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_sets.TestVerticalListWithSets.test_vertical_list_3"]], "test_vertical_list_str_method() (subgroups.tests.data_structures.test_vertical_list_with_bitsets.testverticallistwithbitsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_bitsets.TestVerticalListWithBitsets.test_vertical_list_str_method"]], "test_vertical_list_str_method() (subgroups.tests.data_structures.test_vertical_list_with_sets.testverticallistwithsets method)": [[14, "subgroups.tests.data_structures.test_vertical_list_with_sets.TestVerticalListWithSets.test_vertical_list_str_method"]], "testqualitymeasures (class in subgroups.tests.quality_measures.test_quality_measures)": [[15, "subgroups.tests.quality_measures.test_quality_measures.TestQualityMeasures"]], "subgroups.tests.quality_measures": [[15, "module-subgroups.tests.quality_measures"]], "subgroups.tests.quality_measures.test_quality_measures": [[15, "module-subgroups.tests.quality_measures.test_quality_measures"]], "test_quality_measures_compute() (subgroups.tests.quality_measures.test_quality_measures.testqualitymeasures method)": [[15, "subgroups.tests.quality_measures.test_quality_measures.TestQualityMeasures.test_quality_measures_compute"]], "test_quality_measures_general() (subgroups.tests.quality_measures.test_quality_measures.testqualitymeasures method)": [[15, "subgroups.tests.quality_measures.test_quality_measures.TestQualityMeasures.test_quality_measures_general"]], "test_quality_measures_value_of_class_variables() (subgroups.tests.quality_measures.test_quality_measures.testqualitymeasures method)": [[15, "subgroups.tests.quality_measures.test_quality_measures.TestQualityMeasures.test_quality_measures_value_of_class_variables"]], "testdataframefilter (class in subgroups.tests.utils.test_dataframe_filters)": [[16, "subgroups.tests.utils.test_dataframe_filters.TestDataFrameFilter"]], "testtoinputformatforsubgrouplistalgorithms (class in subgroups.tests.utils.test_file_format_transformations)": [[16, "subgroups.tests.utils.test_file_format_transformations.TestToInputFormatForSubgroupListAlgorithms"]], "subgroups.tests.utils": [[16, "module-subgroups.tests.utils"]], "subgroups.tests.utils.test_dataframe_filters": [[16, "module-subgroups.tests.utils.test_dataframe_filters"]], "subgroups.tests.utils.test_file_format_transformations": [[16, "module-subgroups.tests.utils.test_file_format_transformations"]], "test_dataframe_filters_general() (subgroups.tests.utils.test_dataframe_filters.testdataframefilter method)": [[16, "subgroups.tests.utils.test_dataframe_filters.TestDataFrameFilter.test_dataframe_filters_general"]], "test_to_input_format_for_subgroup_list_algorithms_1() (subgroups.tests.utils.test_file_format_transformations.testtoinputformatforsubgrouplistalgorithms method)": [[16, "subgroups.tests.utils.test_file_format_transformations.TestToInputFormatForSubgroupListAlgorithms.test_to_input_format_for_subgroup_list_algorithms_1"]], "test_to_input_format_for_subgroup_list_algorithms_2() (subgroups.tests.utils.test_file_format_transformations.testtoinputformatforsubgrouplistalgorithms method)": [[16, "subgroups.tests.utils.test_file_format_transformations.TestToInputFormatForSubgroupListAlgorithms.test_to_input_format_for_subgroup_list_algorithms_2"]], "test_to_input_format_for_subgroup_list_algorithms_3() (subgroups.tests.utils.test_file_format_transformations.testtoinputformatforsubgrouplistalgorithms method)": [[16, "subgroups.tests.utils.test_file_format_transformations.TestToInputFormatForSubgroupListAlgorithms.test_to_input_format_for_subgroup_list_algorithms_3"]], "filter_by_list_of_selectors() (in module subgroups.utils.dataframe_filters)": [[17, "subgroups.utils.dataframe_filters.filter_by_list_of_selectors"]], "log2_multinomial_with_recurrence() (in module subgroups.utils.mdl)": [[17, "subgroups.utils.mdl.log2_multinomial_with_recurrence"]], "multinomial_with_recurrence() (in module subgroups.utils.mdl)": [[17, "subgroups.utils.mdl.multinomial_with_recurrence"]], "subgroups.utils": [[17, "module-subgroups.utils"]], "subgroups.utils.dataframe_filters": [[17, "module-subgroups.utils.dataframe_filters"]], "subgroups.utils.file_format_transformations": [[17, "module-subgroups.utils.file_format_transformations"]], "subgroups.utils.mdl": [[17, "module-subgroups.utils.mdl"]], "to_input_format_for_subgroup_list_algorithms() (in module subgroups.utils.file_format_transformations)": [[17, "subgroups.utils.file_format_transformations.to_input_format_for_subgroup_list_algorithms"]], "universal_code_for_integer() (in module subgroups.utils.mdl)": [[17, "subgroups.utils.mdl.universal_code_for_integer"]], "universal_code_for_integer_with_maximum() (in module subgroups.utils.mdl)": [[17, "subgroups.utils.mdl.universal_code_for_integer_with_maximum"]]}})